@@ -99,24 +99,27 @@
 
 
 .. cfunction:: int PyObject_RichCompareBool(PyObject *o1, PyObject *o2, int opid)
 
    Compare the values of *o1* and *o2* using the operation specified by *opid*,
    which must be one of :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`,
    :const:`Py_NE`, :const:`Py_GT`, or :const:`Py_GE`, corresponding to ``<``,
    ``<=``, ``==``, ``!=``, ``>``, or ``>=`` respectively. Returns ``-1`` on error,
    ``0`` if the result is false, ``1`` otherwise. This is the equivalent of the
    Python expression ``o1 op o2``, where ``op`` is the operator corresponding to
    *opid*.
 
+.. note::
+   If *o1* and *o2* are the same object, :cfunc:`PyObject_RichCompareBool`
+   will always return ``1`` for :const:`Py_EQ` and ``0`` for :const:`Py_NE`.
 
 .. cfunction:: int PyObject_Cmp(PyObject *o1, PyObject *o2, int *result)
 
    .. index:: builtin: cmp
 
    Compare the values of *o1* and *o2* using a routine provided by *o1*, if one
    exists, otherwise with a routine provided by *o2*.  The result of the comparison
    is returned in *result*.  Returns ``-1`` on failure.  This is the equivalent of
    the Python statement ``result = cmp(o1, o2)``.
 
 
 .. cfunction:: int PyObject_Compare(PyObject *o1, PyObject *o2)
