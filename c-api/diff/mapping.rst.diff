--- r262/c-api/mapping.rst	2009-02-02 17:27:16.400413000 +0900
+++ r266/c-api/mapping.rst	2009-04-29 17:00:05.894850000 +0900
@@ -3,32 +3,37 @@
 .. _mapping:
 
 Mapping Protocol
 ================
 
 
 .. cfunction:: int PyMapping_Check(PyObject *o)
 
    Return ``1`` if the object provides mapping protocol, and ``0`` otherwise.  This
    function always succeeds.
 
 
-.. cfunction:: Py_ssize_t PyMapping_Length(PyObject *o)
+.. cfunction:: Py_ssize_t PyMapping_Size(PyObject *o)
+               Py_ssize_t PyMapping_Length(PyObject *o)
 
    .. index:: builtin: len
 
    Returns the number of keys in object *o* on success, and ``-1`` on failure.  For
    objects that do not provide mapping protocol, this is equivalent to the Python
    expression ``len(o)``.
 
+   .. versionchanged:: 2.5
+      These functions returned an :ctype:`int` type. This might require
+      changes in your code for properly supporting 64-bit systems.
+
 
 .. cfunction:: int PyMapping_DelItemString(PyObject *o, char *key)
 
    Remove the mapping for object *key* from the object *o*. Return ``-1`` on
    failure.  This is equivalent to the Python statement ``del o[key]``.
 
 
 .. cfunction:: int PyMapping_DelItem(PyObject *o, PyObject *key)
 
    Remove the mapping for object *key* from the object *o*. Return ``-1`` on
    failure.  This is equivalent to the Python statement ``del o[key]``.
 
