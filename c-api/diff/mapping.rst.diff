=== modified file 'Doc/c-api/mapping.rst'
--- Doc/c-api/mapping.rst	2008-01-19 22:08:21 +0000
+++ Doc/c-api/mapping.rst	2010-11-17 12:18:12 +0000
@@ -1,63 +1,68 @@
 .. highlightlang:: c
 
 .. _mapping:
 
 Mapping Protocol
 ================
 
 
 .. cfunction:: int PyMapping_Check(PyObject *o)
 
    Return ``1`` if the object provides mapping protocol, and ``0`` otherwise.  This
    function always succeeds.
 
 
-.. cfunction:: Py_ssize_t PyMapping_Length(PyObject *o)
+.. cfunction:: Py_ssize_t PyMapping_Size(PyObject *o)
+               Py_ssize_t PyMapping_Length(PyObject *o)
 
    .. index:: builtin: len
 
    Returns the number of keys in object *o* on success, and ``-1`` on failure.  For
    objects that do not provide mapping protocol, this is equivalent to the Python
    expression ``len(o)``.
 
+   .. versionchanged:: 2.5
+      These functions returned an :ctype:`int` type. This might require
+      changes in your code for properly supporting 64-bit systems.
+
 
 .. cfunction:: int PyMapping_DelItemString(PyObject *o, char *key)
 
    Remove the mapping for object *key* from the object *o*. Return ``-1`` on
    failure.  This is equivalent to the Python statement ``del o[key]``.
 
 
 .. cfunction:: int PyMapping_DelItem(PyObject *o, PyObject *key)
 
    Remove the mapping for object *key* from the object *o*. Return ``-1`` on
    failure.  This is equivalent to the Python statement ``del o[key]``.
 
 
 .. cfunction:: int PyMapping_HasKeyString(PyObject *o, char *key)
 
    On success, return ``1`` if the mapping object has the key *key* and ``0``
-   otherwise.  This is equivalent to the Python expression ``o.has_key(key)``.
-   This function always succeeds.
+   otherwise.  This is equivalent to ``o[key]``, returning ``True`` on success
+   and ``False`` on an exception.  This function always succeeds.
 
 
 .. cfunction:: int PyMapping_HasKey(PyObject *o, PyObject *key)
 
-   Return ``1`` if the mapping object has the key *key* and ``0`` otherwise.  This
-   is equivalent to the Python expression ``o.has_key(key)``.  This function always
-   succeeds.
+   Return ``1`` if the mapping object has the key *key* and ``0`` otherwise.
+   This is equivalent to ``o[key]``, returning ``True`` on success and ``False``
+   on an exception.  This function always succeeds.
 
 
 .. cfunction:: PyObject* PyMapping_Keys(PyObject *o)
 
    On success, return a list of the keys in object *o*.  On failure, return *NULL*.
    This is equivalent to the Python expression ``o.keys()``.
 
 
 .. cfunction:: PyObject* PyMapping_Values(PyObject *o)
 
    On success, return a list of the values in object *o*.  On failure, return
    *NULL*. This is equivalent to the Python expression ``o.values()``.
 
 
 .. cfunction:: PyObject* PyMapping_Items(PyObject *o)
 

