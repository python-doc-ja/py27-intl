--- r262/tutorial/interpreter.rst	2009-01-04 06:55:17.853888000 +0900
+++ r266/tutorial/interpreter.rst	2009-10-27 23:59:26.886697000 +0900
@@ -22,25 +22,25 @@
 alternative location.)
 
 On Windows machines, the Python installation is usually placed in
 :file:`C:\\Python26`, though you can change this when you're running the
 installer.  To add this directory to your path,  you can type the following
 command into the command prompt in a DOS box::
 
    set path=%path%;C:\python26
 
 Typing an end-of-file character (:kbd:`Control-D` on Unix, :kbd:`Control-Z` on
 Windows) at the primary prompt causes the interpreter to exit with a zero exit
 status.  If that doesn't work, you can exit the interpreter by typing the
-following commands: ``import sys; sys.exit()``.
+following command: ``quit()``.
 
 The interpreter's line-editing features usually aren't very sophisticated.  On
 Unix, whoever installed the interpreter may have enabled support for the GNU
 readline library, which adds more elaborate interactive editing and history
 features. Perhaps the quickest check to see whether command line editing is
 supported is typing Control-P to the first Python prompt you get.  If it beeps,
 you have command line editing; see Appendix :ref:`tut-interacting` for an
 introduction to the keys.  If nothing appears to happen, or if ``^P`` is echoed,
 command line editing isn't available; you'll only be able to use backspace to
 remove characters from the current line.
 
 The interpreter operates somewhat like the Unix shell: when called with standard
