--- r262/tutorial/index.rst	2009-04-06 06:11:43.798160000 +0900
+++ r266/tutorial/index.rst	2009-10-28 00:08:27.384772000 +0900
@@ -19,36 +19,35 @@
 contains distributions of and pointers to many free third party Python modules,
 programs and tools, and additional documentation.
 
 The Python interpreter is easily extended with new functions and data types
 implemented in C or C++ (or other languages callable from C). Python is also
 suitable as an extension language for customizable applications.
 
 This tutorial introduces the reader informally to the basic concepts and
 features of the Python language and system. It helps to have a Python
 interpreter handy for hands-on experience, but all examples are self-contained,
 so the tutorial can be read off-line as well.
 
-For a description of standard objects and modules, see the Python Library
-Reference document. The Python Reference Manual gives a more formal definition
-of the language. To write extensions in C or C++, read Extending and Embedding
-the Python Interpreter and Python/C API Reference. There are also several books
-covering Python in depth.
+For a description of standard objects and modules, see :ref:`library-index`.
+:ref:`reference-index` gives a more formal definition of the language.  To write
+extensions in C or C++, read :ref:`extending-index` and
+:ref:`c-api-index`. There are also several books covering Python in depth.
 
 This tutorial does not attempt to be comprehensive and cover every single
 feature, or even every commonly used feature. Instead, it introduces many of
 Python's most noteworthy features, and will give you a good idea of the
 language's flavor and style. After reading it, you will be able to read and
 write Python modules and programs, and you will be ready to learn more about the
-various Python library modules described in the Python Library Reference.
+various Python library modules described in :ref:`library-index`.
 
 The :ref:`glossary` is also worth going through.
 
 .. toctree::
    :numbered:
 
    appetite.rst
    interpreter.rst
    introduction.rst
    controlflow.rst
    datastructures.rst
    modules.rst
