@@ -2983,51 +2983,24 @@
 * Python 2.6 can be built with Microsoft Visual Studio 2008 (version
   9.0), and this is the new default compiler.  See the
   :file:`PCbuild` directory for the build files.  (Implemented by
   Christian Heimes.)
 
 * On Mac OS X, Python 2.6 can be compiled as a 4-way universal build.
   The :program:`configure` script
   can take a :option:`--with-universal-archs=[32-bit|64-bit|all]`
   switch, controlling whether the binaries are built for 32-bit
   architectures (x86, PowerPC), 64-bit (x86-64 and PPC-64), or both.
   (Contributed by Ronald Oussoren.)
 
-* A new function added in Python 2.6.6, :cfunc:`PySys_SetArgvEx`, sets
-  the value of ``sys.argv`` and can optionally update ``sys.path`` to
-  include the directory containing the script named by ``sys.argv[0]``
-  depending on the value of an *updatepath* parameter.
-
-  This function was added to close a security hole for applications
-  that embed Python.  The old function, :cfunc:`PySys_SetArgv`, would
-  always update ``sys.path``, and sometimes it would add the current
-  directory.  This meant that, if you ran an application embedding
-  Python in a directory controlled by someone else, attackers could
-  put a Trojan-horse module in the directory (say, a file named
-  :file:`os.py`) that your application would then import and run.
-
-  If you maintain a C/C++ application that embeds Python, check
-  whether you're calling :cfunc:`PySys_SetArgv` and carefully consider
-  whether the application should be using :cfunc:`PySys_SetArgvEx`
-  with *updatepath* set to false.  Note that using this function will
-  break compatibility with Python versions 2.6.5 and earlier; if you
-  have to continue working with earlier versions, you can leave
-  the call to :cfunc:`PySys_SetArgv` alone and call
-  ``PyRun_SimpleString("sys.path.pop(0)\n")`` afterwards to discard
-  the first ``sys.path`` component.
-
-  Security issue reported as `CVE-2008-5983
-  <http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5983>`_;
-  discussed in :issue:`5753`, and fixed by Antoine Pitrou.
-
 * The BerkeleyDB module now has a C API object, available as
   ``bsddb.db.api``.   This object can be used by other C extensions
   that wish to use the :mod:`bsddb` module for their own purposes.
   (Contributed by Duncan Grisby.)
 
 * The new buffer interface, previously described in
   `the PEP 3118 section <#pep-3118-revised-buffer-protocol>`__,
   adds :cfunc:`PyObject_GetBuffer` and :cfunc:`PyBuffer_Release`,
   as well as a few other functions.
 
 * Python's use of the C stdio library is now thread-safe, or at least
   as thread-safe as the underlying library is.  A long-standing potential
@@ -3312,33 +3285,24 @@
   when accessed using slicing or index access; having
   :class:`Exception` behave like a tuple is being phased out.
 
 * (3.0-warning mode) inequality comparisons between two dictionaries
   or two objects that don't implement comparison methods are reported
   as warnings.  ``dict1 == dict2`` still works, but ``dict1 < dict2``
   is being phased out.
 
   Comparisons between cells, which are an implementation detail of Python's
   scoping rules, also cause warnings because such comparisons are forbidden
   entirely in 3.0.
 
-For applications that embed Python:
-
-* The :cfunc:`PySys_SetArgvEx` function was added in Python 2.6.6,
-  letting applications close a security hole when the existing
-  :cfunc:`PySys_SetArgv` function was used.  Check whether you're
-  calling :cfunc:`PySys_SetArgv` and carefully consider whether the
-  application should be using :cfunc:`PySys_SetArgvEx` with
-  *updatepath* set to false.
-
 .. ======================================================================
 
 
 .. _26acks:
 
 Acknowledgements
 ================
 
 The author would like to thank the following people for offering
 suggestions, corrections and assistance with various drafts of this
 article: Georg Brandl, Steve Brown, Nick Coghlan, Ralph Corderoy,
 Jim Jewett, Kent Johnson, Chris Lambacher,  Martin Michlmayr,
