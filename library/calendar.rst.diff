@@ -7,30 +7,34 @@
               program.
 .. sectionauthor:: Drew Csillag <drew_csillag@geocities.com>
 
 
 This module allows you to output calendars like the Unix :program:`cal` program,
 and provides additional useful functions related to the calendar. By default,
 these calendars have Monday as the first day of the week, and Sunday as the last
 (the European convention). Use :func:`setfirstweekday` to set the first day of
 the week to Sunday (6) or to any other weekday.  Parameters that specify dates
 are given as integers. For related
 functionality, see also the :mod:`datetime` and :mod:`time` modules.
 
-Most of these functions and classses rely on the :mod:`datetime` module which
+Most of these functions and classes rely on the :mod:`datetime` module which
 uses an idealized calendar, the current Gregorian calendar indefinitely extended
 in both directions.  This matches the definition of the "proleptic Gregorian"
 calendar in Dershowitz and Reingold's book "Calendrical Calculations", where
 it's the base calendar for all computations.
 
+.. seealso::
+
+   Latest version of the `calendar module Python source code
+   <http://svn.python.org/view/python/branches/release27-maint/Lib/calendar.py?view=markup>`_
 
 .. class:: Calendar([firstweekday])
 
    Creates a :class:`Calendar` object. *firstweekday* is an integer specifying the
    first day of the week. ``0`` is Monday (the default), ``6`` is Sunday.
 
    A :class:`Calendar` object provides several methods that can be used for
    preparing the calendar data for formatting. This class doesn't do any formatting
    itself. This is the job of subclasses.
 
    .. versionadded:: 2.5
 
@@ -169,40 +173,47 @@
    .. method:: formatyearpage(theyear[, width[, css[, encoding]]])
 
       Return a year's calendar as a complete HTML page. *width* (defaulting to
       3) specifies the number of months per row. *css* is the name for the
       cascading style sheet to be used. :const:`None` can be passed if no style
       sheet should be used. *encoding* specifies the encoding to be used for the
       output (defaulting to the system default encoding).
 
 
 .. class:: LocaleTextCalendar([firstweekday[, locale]])
 
    This subclass of :class:`TextCalendar` can be passed a locale name in the
-   constructor and will return month and weekday names in the specified
-   locale. If this locale includes an encoding all strings containing month and
-   weekday names will be returned as unicode.
+   constructor and will return month and weekday names in the specified locale.
+   If this locale includes an encoding all strings containing month and weekday
+   names will be returned as unicode.
 
    .. versionadded:: 2.5
 
 
 .. class:: LocaleHTMLCalendar([firstweekday[, locale]])
 
    This subclass of :class:`HTMLCalendar` can be passed a locale name in the
    constructor and will return month and weekday names in the specified
    locale. If this locale includes an encoding all strings containing month and
    weekday names will be returned as unicode.
 
    .. versionadded:: 2.5
 
+.. note::
+
+   The :meth:`formatweekday` and :meth:`formatmonthname` methods of these two
+   classes temporarily change the current locale to the given *locale*.  Because
+   the current locale is a process-wide setting, they are not thread-safe.
+
+
 For simple text calendars this module provides the following functions.
 
 
 .. function:: setfirstweekday(weekday)
 
    Sets the weekday (``0`` is Monday, ``6`` is Sunday) to start each week. The
    values :const:`MONDAY`, :const:`TUESDAY`, :const:`WEDNESDAY`, :const:`THURSDAY`,
    :const:`FRIDAY`, :const:`SATURDAY`, and :const:`SUNDAY` are provided for
    convenience. For example, to set the first weekday to Sunday::
 
       import calendar
       calendar.setfirstweekday(calendar.SUNDAY)
