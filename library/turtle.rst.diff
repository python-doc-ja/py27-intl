@@ -699,25 +699,28 @@
 
    :param fullcircle: a number
 
    Set angle measurement units, i.e. set number of "degrees" for a full circle.
    Default value is 360 degrees.
 
    .. doctest::
 
       >>> turtle.home()
       >>> turtle.left(90)
       >>> turtle.heading()
       90.0
-      >>> turtle.degrees(400.0)  # angle measurement in gon
+
+      Change angle measurement unit to grad (also known as gon,
+      grade, or gradian and equals 1/100-th of the right angle.)
+      >>> turtle.degrees(400.0)
       >>> turtle.heading()
       100.0
       >>> turtle.degrees(360)
       >>> turtle.heading()
       90.0
 
 
 .. function:: radians()
 
    Set the angle measurement units to radians.  Equivalent to
    ``degrees(2*math.pi)``.
 
@@ -866,25 +869,25 @@
    .. doctest::
 
        >>> colormode()
        1.0
        >>> turtle.pencolor()
        'red'
        >>> turtle.pencolor("brown")
        >>> turtle.pencolor()
        'brown'
        >>> tup = (0.2, 0.8, 0.55)
        >>> turtle.pencolor(tup)
        >>> turtle.pencolor()
-       (0.20000000000000001, 0.80000000000000004, 0.5490196078431373)
+       (0.2, 0.8, 0.5490196078431373)
        >>> colormode(255)
        >>> turtle.pencolor()
        (51, 204, 140)
        >>> turtle.pencolor('#32c18f')
        >>> turtle.pencolor()
        (50, 193, 143)
 
 
 .. function:: fillcolor(*args)
 
    Return or set the fillcolor.
 
@@ -1446,24 +1449,25 @@
    :hide:
 
    >>> screen = Screen()
 
 Window control
 --------------
 
 .. function:: bgcolor(*args)
 
    :param args: a color string or three numbers in the range 0..colormode or a
                 3-tuple of such numbers
 
+
    Set or return background color of the TurtleScreen.
 
    .. doctest::
 
       >>> screen.bgcolor("orange")
       >>> screen.bgcolor()
       'orange'
       >>> screen.bgcolor("#800080")
       >>> screen.bgcolor()
       (128, 0, 128)
 
 
@@ -1826,25 +1830,25 @@
 
 
    If the value "using_IDLE" in the configuration dictionary is ``False``
    (default value), also enter mainloop.  Remark: If IDLE with the ``-n`` switch
    (no subprocess) is used, this value should be set to ``True`` in
    :file:`turtle.cfg`.  In this case IDLE's own mainloop is active also for the
    client script.
 
 
 .. function:: setup(width=_CFG["width"], height=_CFG["height"], startx=_CFG["leftright"], starty=_CFG["topbottom"])
 
    Set the size and position of the main window.  Default values of arguments
-   are stored in the configuration dicionary and can be changed via a
+   are stored in the configuration dictionary and can be changed via a
    :file:`turtle.cfg` file.
 
    :param width: if an integer, a size in pixels, if a float, a fraction of the
                  screen; default is 50% of screen
    :param height: if an integer, the height in pixels, if a float, a fraction of
                   the screen; default is 75% of screen
    :param startx: if positive, starting position in pixels from the left
                   edge of the screen, if negative from the right edge, if None,
                   center window horizontally
    :param startx: if positive, starting position in pixels from the top
                   edge of the screen, if negative from the bottom edge, if None,
                   center window vertically
@@ -2156,27 +2160,29 @@
   standalone.
 - There is a :file:`turtle.cfg` file in this directory, which also serves as an
   example for how to write and use such files.
 
 The demoscripts are:
 
 +----------------+------------------------------+-----------------------+
 | Name           | Description                  | Features              |
 +----------------+------------------------------+-----------------------+
 | bytedesign     | complex classical            | :func:`tracer`, delay,|
 |                | turtlegraphics pattern       | :func:`update`        |
 +----------------+------------------------------+-----------------------+
-| chaos          | graphs verhust dynamics,     | world coordinates     |
-|                | proves that you must not     |                       |
-|                | trust computers' computations|                       |
+| chaos          | graphs Verhulst dynamics,    | world coordinates     |
+|                | shows that computer's        |                       |
+|                | computations can generate    |                       |
+|                | results sometimes against the|                       |
+|                | common sense expectations    |                       |
 +----------------+------------------------------+-----------------------+
 | clock          | analog clock showing time    | turtles as clock's    |
 |                | of your computer             | hands, ontimer        |
 +----------------+------------------------------+-----------------------+
 | colormixer     | experiment with r, g, b      | :func:`ondrag`        |
 +----------------+------------------------------+-----------------------+
 | fractalcurves  | Hilbert & Koch curves        | recursion             |
 +----------------+------------------------------+-----------------------+
 | lindenmayer    | ethnomathematics             | L-System              |
 |                | (indian kolams)              |                       |
 +----------------+------------------------------+-----------------------+
 | minimal_hanoi  | Towers of Hanoi              | Rectangular Turtles   |
