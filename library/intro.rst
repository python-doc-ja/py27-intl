
.. _intro:

********
はじめに
********

この "Python ライブラリ" には様々な内容が収録されています。

このライブラリには、数値型やリスト型のような、通常は言語の"核"  をなす部分とみなされるデータ型が含まれています。Python 言語のコア
部分では、これらの型に対してリテラル表現形式を与え、意味づけ上の いくつかの制約を与えていますが、完全にその意味づけを定義している
わけではありません。(一方で、言語のコア部分では演算子のスペルや 優先順位のような構文法的な属性を定義しています。) 　
このライブラリにはまた、組み込み関数と例外が納められています --- 組み込み関数および例外は、全ての Python で書かれたコード上で、
:keyword:`import` 文を使わずに使うことができるオブジェクトです。 これらの組み込み要素のうちいくつかは言語のコア部分で定義されて
いますが、大半は言語コアの意味づけ上不可欠なものではないので ここでしか記述されていません。

とはいえ、このライブラリの大部分に収録されているのはモジュールの コレクションです。このコレクションを細分化する方法はいろいろあります。 あるモジュールは C
言語で書かれ、Python インタプリタに組み 込まれています; 一方別のモジュールは Python で書かれ、ソースコードの
形式で取り込まれます。またあるモジュールは、例えば実行スタックの追跡 結果を出力するといった、Python に非常に特化したインタフェースを提供
し、一方他のモジュールでは、特定のハードウェアにアクセスするといった、 特定のオペレーティングシステムに特化したインタフェースを提供
し、さらに別のモジュールでは WWW (ワールドワイドウェブ) のような特定のアプリケーション分野に特化したインタフェースを
提供しています。モジュールによっては全てのバージョン、全ての 移植版の Python で利用することができたり、背後にあるシステムが
サポートしている場合にのみ使えたり、Python をコンパイルして インストールする際に特定の設定オプションを選んだときにのみ 利用できたりします。

このマニュアルの構成は "内部から外部へ:" つまり、最初に 組み込みのデータ型を記述し、組み込みの関数および例外、
そして最後に各モジュールといった形になっています。モジュール は関係のあるものでグループ化して一つの章にしています。
章の順番付けや各章内のモジュールの順番付けは、大まかに重要性の 高いものから低いものになっています。

つまり、このマニュアルを最初から読み始め、読み飽き始めた ところで次の章に進めば、Python ライブラリで利用できるモジュールや
サポートしているアプリケーション領域の概要をそこそこ理解できる ということです。 もちろん、このマニュアルを小説のように読む必要は*ありません* ---
(マニュアルの先頭部分にある) 目次にざっと目を通したり、 (最後尾にある) 索引でお目当ての関数やモジュール、用語を探す
ことだってできます。もしランダムな項目について勉強してみたいの なら、ランダムにページを選び (:mod:`random` 参照)、そこから 1, 2
節読むこともできます。このマニュアルの各節をどんな順番で 読むかに関わらず、第 :ref:`builtin` 章、 "組み込み型、例外、および 関数"
から始めるとよいでしょう。マニュアルの他の部分は、 この節の内容について知っているものとして書かれているからです。

それでは、ショーの始まりです！

