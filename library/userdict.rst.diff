@@ -10,24 +10,29 @@
 for classes that already have a minimum mapping interface.  This greatly
 simplifies writing classes that need to be substitutable for dictionaries (such
 as the shelve module).
 
 This module also defines a class, :class:`UserDict`, that acts as a wrapper
 around dictionary objects.  The need for this class has been largely supplanted
 by the ability to subclass directly from :class:`dict` (a feature that became
 available starting with Python version 2.2).  Prior to the introduction of
 :class:`dict`, the :class:`UserDict` class was used to create dictionary-like
 sub-classes that obtained new behaviors by overriding existing methods or adding
 new ones.
 
+.. seealso::
+
+   Latest version of the `UserDict Python source code
+   <http://svn.python.org/view/python/branches/release27-maint/Lib/UserDict.py?view=markup>`_
+
 The :mod:`UserDict` module defines the :class:`UserDict` class and
 :class:`DictMixin`:
 
 
 .. class:: UserDict([initialdata])
 
    Class that simulates a dictionary.  The instance's contents are kept in a
    regular dictionary, which is accessible via the :attr:`data` attribute of
    :class:`UserDict` instances.  If *initialdata* is provided, :attr:`data` is
    initialized with its contents; note that a reference to *initialdata* will not
    be kept, allowing it be used for other purposes.
 
