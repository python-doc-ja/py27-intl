@@ -29,24 +29,34 @@
    returned as strings.
 
    Values that cannot be determined are returned as given by the parameter presets.
    If bits is given as ``''``, the :cfunc:`sizeof(pointer)` (or
    :cfunc:`sizeof(long)` on Python version < 1.5.2) is used as indicator for the
    supported pointer size.
 
    The function relies on the system's :file:`file` command to do the actual work.
    This is available on most if not all Unix  platforms and some non-Unix platforms
    and then only if the executable points to the Python interpreter.  Reasonable
    defaults are used when the above needs are not met.
 
+   .. note::
+
+      On Mac OS X (and perhaps other platforms), executable files may be
+      universal files containing multiple architectures.
+
+      To get at the "64-bitness" of the current interpreter, it is more
+      reliable to query the :attr:`sys.maxsize` attribute::
+
+         is_64bits = sys.maxsize > 2**32
+
 
 .. function:: machine()
 
    Returns the machine type, e.g. ``'i386'``. An empty string is returned if the
    value cannot be determined.
 
 
 .. function:: node()
 
    Returns the computer's network name (may not be fully qualified!). An empty
    string is returned if the value cannot be determined.
 
@@ -89,25 +99,25 @@
 
 
 .. function:: python_branch()
 
    Returns a string identifying the Python implementation SCM branch.
 
    .. versionadded:: 2.6
 
 
 .. function:: python_implementation()
 
    Returns a string identifying the Python implementation. Possible return values
-   are: 'CPython', 'IronPython', 'Jython'.
+   are: 'CPython', 'IronPython', 'Jython', 'PyPy'.
 
    .. versionadded:: 2.6
 
 
 .. function:: python_revision()
 
    Returns a string identifying the Python implementation SCM revision.
 
    .. versionadded:: 2.6
 
 
 .. function:: python_version()
@@ -185,25 +195,25 @@
    Get additional version information from the Windows Registry and return a tuple
    ``(version, csd, ptype)`` referring to version number, CSD level and OS type
    (multi/single processor).
 
    As a hint: *ptype* is ``'Uniprocessor Free'`` on single processor NT machines
    and ``'Multiprocessor Free'`` on multi processor machines. The *'Free'* refers
    to the OS version being free of debugging code. It could also state *'Checked'*
    which means the OS version uses debugging code, i.e. code that checks arguments,
    ranges, etc.
 
    .. note::
 
-      Note: this function works best with Mark Hammond's
+      This function works best with Mark Hammond's
       :mod:`win32all` package installed, but also on Python 2.3 and
       later (support for this was added in Python 2.6). It obviously
       only runs on Win32 compatible platforms.
 
 
 Win95/98 specific
 ^^^^^^^^^^^^^^^^^
 
 .. function:: popen(cmd, mode='r', bufsize=None)
 
    Portable :func:`popen` interface.  Find a working popen implementation
    preferring :func:`win32pipe.popen`.  On Windows NT, :func:`win32pipe.popen`
