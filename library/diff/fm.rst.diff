--- rest25/library/fm.rst	2008-12-19 16:58:07.000000000 +0900
+++ rest262/library/fm.rst	2009-04-05 05:02:09.000000000 +0900
@@ -1,19 +1,24 @@
 
 :mod:`fm` --- *Font Manager* interface
 ======================================
 
 .. module:: fm
    :platform: IRIX
    :synopsis: Font Manager interface for SGI workstations.
+   :deprecated:
+
+.. deprecated:: 2.6
+   The :mod:`fm` module has been deprecated for removal in Python 3.0.
+
 
 
 .. index::
    single: Font Manager, IRIS
    single: IRIS Font Manager
 
 This module provides access to the IRIS *Font Manager* library.   It is
 available only on Silicon Graphics machines. See also: *4Sight User's Guide*,
 section 1, chapter 5: "Using the IRIS Font Manager."
 
 This is not yet a full interface to the IRIS Font Manager. Among the unsupported
 features are: matrix operations; cache operations; character operations (use
@@ -50,48 +55,47 @@
 .. function:: setpath(string)
 
    Sets the font search path. Calls ``fmsetpath(string)``. (XXX Does not work!?!)
 
 
 .. function:: fontpath()
 
    Returns the current font search path.
 
 Font handle objects support the following operations:
 
 
-.. function:: scalefont(factor)
+.. method:: font handle.scalefont(factor)
 
    Returns a handle for a scaled version of this font. Calls ``fmscalefont(fh,
    factor)``.
 
 
-.. function:: setfont()
+.. method:: font handle.setfont()
 
    Makes this font the current font. Note: the effect is undone silently when the
    font handle object is deleted. Calls ``fmsetfont(fh)``.
 
 
-.. function:: getfontname()
+.. method:: font handle.getfontname()
 
    Returns this font's name. Calls ``fmgetfontname(fh)``.
 
 
-.. function:: getcomment()
+.. method:: font handle.getcomment()
 
    Returns the comment string associated with this font. Raises an exception if
    there is none. Calls ``fmgetcomment(fh)``.
 
 
-.. function:: getfontinfo()
+.. method:: font handle.getfontinfo()
 
    Returns a tuple giving some pertinent data about this font. This is an interface
    to ``fmgetfontinfo()``. The returned tuple contains the following numbers:
-   ``(``*printermatched*, *fixed_width*, *xorig*, *yorig*, *xsize*, *ysize*,
-   *height*, *nglyphs*``)``.
+   ``(printermatched, fixed_width, xorig, yorig, xsize, ysize, height, nglyphs)``.
 
 
-.. function:: getstrwidth(string)
+.. method:: font handle.getstrwidth(string)
 
    Returns the width, in pixels, of *string* when drawn in this font. Calls
    ``fmgetstrwidth(fh, string)``.
 
