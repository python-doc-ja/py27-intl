--- r262/library/exceptions.rst	2009-04-06 06:48:06.719229000 +0900
+++ r266/library/exceptions.rst	2009-10-27 23:36:50.397095000 +0900
@@ -75,27 +75,27 @@
    :exc:`StandardError` itself is derived from :exc:`Exception`.
 
 
 .. exception:: ArithmeticError
 
    The base class for those built-in exceptions that are raised for various
    arithmetic errors: :exc:`OverflowError`, :exc:`ZeroDivisionError`,
    :exc:`FloatingPointError`.
 
 
 .. exception:: LookupError
 
-   The base class for the exceptions that are raised when a key or index used on a
-   mapping or sequence is invalid: :exc:`IndexError`, :exc:`KeyError`.  This can be
-   raised directly by :func:`sys.setdefaultencoding`.
+   The base class for the exceptions that are raised when a key or index used on
+   a mapping or sequence is invalid: :exc:`IndexError`, :exc:`KeyError`.  This
+   can be raised directly by :func:`codecs.lookup`.
 
 
 .. exception:: EnvironmentError
 
    The base class for exceptions that can occur outside the Python system:
    :exc:`IOError`, :exc:`OSError`.  When exceptions of this type are created with a
    2-tuple, the first item is available on the instance's :attr:`errno` attribute
    (it is assumed to be an error number), and the second item is available on the
    :attr:`strerror` attribute (it is usually the associated error message).  The
    tuple itself is also available on the :attr:`args` attribute.
 
    .. versionadded:: 1.5.2
@@ -272,28 +272,28 @@
 
 
 .. exception:: RuntimeError
 
    Raised when an error is detected that doesn't fall in any of the other
    categories.  The associated value is a string indicating what precisely went
    wrong.  (This exception is mostly a relic from a previous version of the
    interpreter; it is not used very much any more.)
 
 
 .. exception:: StopIteration
 
-   Raised by an :term:`iterator`\'s :meth:`next` method to signal that there are
-   no further values.  This is derived from :exc:`Exception` rather than
-   :exc:`StandardError`, since this is not considered an error in its normal
-   application.
+   Raised by an :term:`iterator`\'s :meth:`~iterator.next` method to signal that
+   there are no further values.  This is derived from :exc:`Exception` rather
+   than :exc:`StandardError`, since this is not considered an error in its
+   normal application.
 
    .. versionadded:: 2.2
 
 
 .. exception:: SyntaxError
 
    Raised when the parser encounters a syntax error.  This may occur in an
    :keyword:`import` statement, in an :keyword:`exec` statement, in a call to the
    built-in function :func:`eval` or :func:`input`, or when reading the initial
    script or standard input (also interactively).
 
    Instances of this class have attributes :attr:`filename`, :attr:`lineno`,
@@ -468,16 +468,19 @@
 
    Base class for warnings about probable mistakes in module imports.
 
    .. versionadded:: 2.5
 
 
 .. exception:: UnicodeWarning
 
    Base class for warnings related to Unicode.
 
    .. versionadded:: 2.5
 
-The class hierarchy for built-in exceptions is:
 
+Exception hierarchy
+-------------------
+
+The class hierarchy for built-in exceptions is:
 
 .. literalinclude:: ../../Lib/test/exception_hierarchy.txt
