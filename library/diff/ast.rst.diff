--- r262/library/ast.rst	2009-02-02 17:27:16.400413000 +0900
+++ r266/library/ast.rst	2009-10-27 23:37:48.900246000 +0900
@@ -13,25 +13,25 @@
    The low-level ``_ast`` module containing only the node classes.
 
 .. versionadded:: 2.6
    The high-level ``ast`` module containing all helpers.
 
 
 The :mod:`ast` module helps Python applications to process trees of the Python
 abstract syntax grammar.  The abstract syntax itself might change with each
 Python release; this module helps to find out programmatically what the current
 grammar looks like.
 
 An abstract syntax tree can be generated by passing :data:`ast.PyCF_ONLY_AST` as
-a flag to the :func:`compile` builtin function, or using the :func:`parse`
+a flag to the :func:`compile` built-in function, or using the :func:`parse`
 helper provided in this module.  The result will be a tree of objects whose
 classes all inherit from :class:`ast.AST`.  An abstract syntax tree can be
 compiled into a Python code object using the built-in :func:`compile` function.
 
 
 Node classes
 ------------
 
 .. class:: AST
 
    This is the base of all AST node classes.  The actual node classes are
    derived from the :file:`Parser/Python.asdl` file, which is reproduced
