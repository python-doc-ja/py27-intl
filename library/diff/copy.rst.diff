--- r262/library/copy.rst	2008-05-20 16:49:57.528574000 +0900
+++ r266/library/copy.rst	2009-10-27 23:50:20.761604000 +0900
@@ -1,34 +1,37 @@
-
 :mod:`copy` --- Shallow and deep copy operations
 ================================================
 
 .. module:: copy
    :synopsis: Shallow and deep copy operations.
 
+This module provides generic (shallow and deep) copying operations.
+
 
-.. index::
-   single: copy() (in copy)
-   single: deepcopy() (in copy)
+Interface summary:
 
-This module provides generic (shallow and deep) copying operations.
+.. function:: copy(x)
+
+   Return a shallow copy of *x*.
+
+
+.. function:: deepcopy(x)
+
+   Return a deep copy of *x*.
 
-Interface summary::
 
-   import copy
+.. exception:: error
 
-   x = copy.copy(y)        # make a shallow copy of y
-   x = copy.deepcopy(y)    # make a deep copy of y
+   Raised for module specific errors.
 
-For module specific errors, :exc:`copy.error` is raised.
 
 The difference between shallow and deep copying is only relevant for compound
 objects (objects that contain other objects, like lists or class instances):
 
 * A *shallow copy* constructs a new compound object and then (to the extent
   possible) inserts *references* into it to the objects found in the original.
 
 * A *deep copy* constructs a new compound object and then, recursively, inserts
   *copies* into it of the objects found in the original.
 
 Two problems often exist with deep copy operations that don't exist with shallow
 copy operations:
