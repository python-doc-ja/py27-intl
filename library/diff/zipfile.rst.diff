--- r262/library/zipfile.rst	2009-01-04 06:55:17.853888000 +0900
+++ r266/library/zipfile.rst	2010-08-03 06:45:43.685855000 +0900
@@ -6,32 +6,30 @@
    :synopsis: Read and write ZIP-format archive files.
 .. moduleauthor:: James C. Ahlstrom <jim@interet.com>
 .. sectionauthor:: James C. Ahlstrom <jim@interet.com>
 
 .. versionadded:: 1.6
 
 The ZIP file format is a common archive and compression standard. This module
 provides tools to create, read, write, append, and list a ZIP file.  Any
 advanced use of this module will require an understanding of the format, as
 defined in `PKZIP Application Note
 <http://www.pkware.com/documents/casestudies/APPNOTE.TXT>`_.
 
-This module does not currently handle multi-disk ZIP files, or ZIP files
-which have appended comments (although it correctly handles comments
-added to individual archive members---for which see the :ref:`zipinfo-objects`
-documentation). It can handle ZIP files that use the ZIP64 extensions
+This module does not currently handle multi-disk ZIP files.
+It can handle ZIP files that use the ZIP64 extensions
 (that is ZIP files that are more than 4 GByte in size).  It supports
 decryption of encrypted files in ZIP archives, but it currently cannot
 create an encrypted file.  Decryption is extremely slow as it is
-implemented in native python rather than C.
+implemented in native Python rather than C.
 
 For other archive formats, see the :mod:`bz2`, :mod:`gzip`, and
 :mod:`tarfile` modules.
 
 The module defines the following items:
 
 .. exception:: BadZipfile
 
    The error raised for bad ZIP files (old name: ``zipfile.error``).
 
 
 .. exception:: LargeZipFile
@@ -57,26 +55,25 @@
    of this class are returned by the :meth:`getinfo` and :meth:`infolist`
    methods of :class:`ZipFile` objects.  Most users of the :mod:`zipfile` module
    will not need to create these, but only use those created by this
    module. *filename* should be the full name of the archive member, and
    *date_time* should be a tuple containing six fields which describe the time
    of the last modification to the file; the fields are described in section
    :ref:`zipinfo-objects`.
 
 
 .. function:: is_zipfile(filename)
 
    Returns ``True`` if *filename* is a valid ZIP file based on its magic number,
-   otherwise returns ``False``.  This module does not currently handle ZIP files
-   which have appended comments.
+   otherwise returns ``False``.
 
 
 .. data:: ZIP_STORED
 
    The numeric constant for an uncompressed archive member.
 
 
 .. data:: ZIP_DEFLATED
 
    The numeric constant for the usual ZIP compression method.  This requires the
    zlib module.  No other compression methods are currently supported.
 
@@ -196,24 +193,31 @@
    *pwd* is the password used for encrypted files.
 
    .. versionadded:: 2.6
 
 
 .. method:: ZipFile.extractall([path[, members[, pwd]]])
 
    Extract all members from the archive to the current working directory.  *path*
    specifies a different directory to extract to.  *members* is optional and must
    be a subset of the list returned by :meth:`namelist`.  *pwd* is the password
    used for encrypted files.
 
+   .. warning::
+
+      Never extract archives from untrusted sources without prior inspection.
+      It is possible that files are created outside of *path*, e.g. members
+      that have absolute filenames starting with ``"/"`` or filenames with two
+      dots ``".."``.
+
    .. versionadded:: 2.6
 
 
 .. method:: ZipFile.printdir()
 
    Print a table of contents for the archive to ``sys.stdout``.
 
 
 .. method:: ZipFile.setpassword(pwd)
 
    Set *pwd* as default password to extract encrypted files.
 
