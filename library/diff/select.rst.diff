--- r262/library/select.rst	2008-11-07 17:56:27.337630000 +0900
+++ r266/library/select.rst	2010-08-02 06:48:47.574872000 +0900
@@ -35,34 +35,34 @@
 
 
 .. function:: poll()
 
    (Not supported by all operating systems.)  Returns a polling object, which
    supports registering and unregistering file descriptors, and then polling them
    for I/O events; see section :ref:`poll-objects` below for the methods supported
    by polling objects.
 
 
 .. function:: kqueue()
 
-   (Only supported on BSD.)  Returns a kernel queue object object; see section
+   (Only supported on BSD.)  Returns a kernel queue object; see section
    :ref:`kqueue-objects` below for the methods supported by kqueue objects.
 
    .. versionadded:: 2.6
 
 
-.. function:: kevent(ident, filter=KQ_FILTER_READ, flags=KQ_ADD, fflags=0, data=0, udata=0)
+.. function:: kevent(ident, filter=KQ_FILTER_READ, flags=KQ_EV_ADD, fflags=0, data=0, udata=0)
 
-   (Only supported on BSD.)  Returns a kernel event object object; see section
-   :ref:`kevent-objects` below for the methods supported by kqueue objects.
+   (Only supported on BSD.)  Returns a kernel event object; see section
+   :ref:`kevent-objects` below for the methods supported by kevent objects.
 
    .. versionadded:: 2.6
 
 
 .. function:: select(rlist, wlist, xlist[, timeout])
 
    This is a straightforward interface to the Unix :cfunc:`select` system call.
    The first three arguments are sequences of 'waitable objects': either
    integers representing file descriptors or objects with a parameterless method
    named :meth:`fileno` returning such an integer:
 
    * *rlist*: wait until ready for reading
@@ -151,24 +151,29 @@
    Return the file descriptor number of the control fd.
 
 
 .. method:: epoll.fromfd(fd)
 
    Create an epoll object from a given file descriptor.
 
 
 .. method:: epoll.register(fd[, eventmask])
 
    Register a fd descriptor with the epoll object.
 
+   .. note::
+
+     Registering a file descriptor that's already registered raises an
+     IOError -- contrary to :ref:`poll-objects`'s register.
+
 
 .. method:: epoll.modify(fd, eventmask)
 
    Modify a register file descriptor.
 
 
 .. method:: epoll.unregister(fd)
 
    Remove a registered file descriptor from the epoll object.
 
 
 .. method:: epoll.poll([timeout=-1[, maxevents=-1]])
@@ -293,54 +298,54 @@
 
 http://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2
 
 .. attribute:: kevent.ident
 
    Value used to identify the event. The interpretation depends on the filter
    but it's usually the file descriptor. In the constructor ident can either
    be an int or an object with a fileno() function. kevent stores the integer
    internally.
 
 .. attribute:: kevent.filter
 
-   Name of the kernel filter
+   Name of the kernel filter.
 
    +---------------------------+---------------------------------------------+
    | Constant                  | Meaning                                     |
    +===========================+=============================================+
    | :const:`KQ_FILTER_READ`   | Takes a descriptor and returns whenever     |
    |                           | there is data available to read             |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_FILTER_WRITE`  | Takes a descriptor and returns whenever     |
-   |                           | there is data available to read             |
+   |                           | there is data available to write            |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_FILTER_AIO`    | AIO requests                                |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_FILTER_VNODE`  | Returns when one or more of the requested   |
    |                           | events watched in *fflag* occurs            |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_FILTER_PROC`   | Watch for events on a process id            |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_FILTER_NETDEV` | Watch for events on a network device        |
    |                           | [not available on Mac OS X]                 |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_FILTER_SIGNAL` | Returns whenever the watched signal is      |
    |                           | delivered to the process                    |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_FILTER_TIMER`  | Establishes an arbitrary timer              |
    +---------------------------+---------------------------------------------+
 
 .. attribute:: kevent.flags
 
-   Filter action
+   Filter action.
 
    +---------------------------+---------------------------------------------+
    | Constant                  | Meaning                                     |
    +===========================+=============================================+
    | :const:`KQ_EV_ADD`        | Adds or modifies an event                   |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_EV_DELETE`     | Removes an event from the queue             |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_EV_ENABLE`     | Permitscontrol() to returns the event       |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_EV_DISABLE`    | Disablesevent                               |
    +---------------------------+---------------------------------------------+
@@ -351,89 +356,86 @@
    | :const:`KQ_EV_SYSFLAGS`   | internal event                              |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_EV_FLAG1`      | internal event                              |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_EV_EOF`        | Filter specific EOF condition               |
    +---------------------------+---------------------------------------------+
    | :const:`KQ_EV_ERROR`      | See return values                           |
    +---------------------------+---------------------------------------------+
 
 
 .. attribute:: kevent.fflags
 
-   Filter specific flags
+   Filter specific flags.
 
-
-   :const:`KQ_FILTER_READ` and  :const:`KQ_FILTER_WRITE` filter flags
+   :const:`KQ_FILTER_READ` and  :const:`KQ_FILTER_WRITE` filter flags:
 
    +----------------------------+--------------------------------------------+
    | Constant                   | Meaning                                    |
    +============================+============================================+
    | :const:`KQ_NOTE_LOWAT`     | low water mark of a socket buffer          |
    +----------------------------+--------------------------------------------+
 
-
-   :const:`KQ_FILTER_VNODE` filter flags
+   :const:`KQ_FILTER_VNODE` filter flags:
 
    +----------------------------+--------------------------------------------+
    | Constant                   | Meaning                                    |
    +============================+============================================+
    | :const:`KQ_NOTE_DELETE`    | *unlink()* was called                      |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_WRITE`     | a write occurred                           |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_EXTEND`    | the file was extended                      |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_ATTRIB`    | an attribute was changed                   |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_LINK`      | the link count has changed                 |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_RENAME`    | the file was renamed                       |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_REVOKE`    | access to the file was revoked             |
    +----------------------------+--------------------------------------------+
 
-
-   :const:`KQ_FILTER_PROC` filter flags
+   :const:`KQ_FILTER_PROC` filter flags:
 
    +----------------------------+--------------------------------------------+
    | Constant                   | Meaning                                    |
    +============================+============================================+
    | :const:`KQ_NOTE_EXIT`      | the process has exited                     |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_FORK`      | the process has called *fork()*            |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_EXEC`      | the process has executed a new process     |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_PCTRLMASK` | internal filter flag                       |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_PDATAMASK` | internal filter flag                       |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_TRACK`     | follow a process across *fork()*           |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_CHILD`     | returned on the child process for          |
    |                            | *NOTE_TRACK*                               |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_TRACKERR`  | unable to attach to a child                |
    +----------------------------+--------------------------------------------+
 
-   :const:`KQ_FILTER_NETDEV` filter flags [not available on Mac OS X]
+   :const:`KQ_FILTER_NETDEV` filter flags (not available on Mac OS X):
 
    +----------------------------+--------------------------------------------+
    | Constant                   | Meaning                                    |
    +============================+============================================+
    | :const:`KQ_NOTE_LINKUP`    | link is up                                 |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_LINKDOWN`  | link is down                               |
    +----------------------------+--------------------------------------------+
    | :const:`KQ_NOTE_LINKINV`   | link state is invalid                      |
    +----------------------------+--------------------------------------------+
 
 
 .. attribute:: kevent.data
 
-   Filter specific data
+   Filter specific data.
 
 
 .. attribute:: kevent.udata
 
-   User defined value
+   User defined value.
