--- r262/library/plistlib.rst	2009-02-02 17:27:16.400413000 +0900
+++ r266/library/plistlib.rst	2009-09-21 05:55:04.555880000 +0900
@@ -24,25 +24,25 @@
 
 Values can be strings, integers, floats, booleans, tuples, lists, dictionaries
 (but only with string keys), :class:`Data` or :class:`datetime.datetime`
 objects.  String values (including dictionary keys) may be unicode strings --
 they will be written out as UTF-8.
 
 The ``<data>`` plist type is supported through the :class:`Data` class.  This is
 a thin wrapper around a Python string.  Use :class:`Data` if your strings
 contain control characters.
 
 .. seealso::
 
-   `PList manual page <http://developer.apple.com/documentation/Darwin/Reference/ManPages/man5/plist.5.html>`
+   `PList manual page <http://developer.apple.com/documentation/Darwin/Reference/ManPages/man5/plist.5.html>`_
       Apple's documentation of the file format.
 
 
 This module defines the following functions:
 
 .. function:: readPlist(pathOrFile)
 
    Read a plist file. *pathOrFile* may either be a file name or a (readable)
    file object.  Return the unpacked root object (which usually is a
    dictionary).
 
    The XML data is parsed using the Expat parser from :mod:`xml.parsers.expat`
@@ -66,38 +66,37 @@
 
 .. function:: writePlistToString(rootObject)
 
    Return *rootObject* as a plist-formatted string.
 
 
 
 .. function:: readPlistFromResource(path[, restype='plst'[, resid=0]])
 
     Read a plist from the resource with type *restype* from the resource fork of
     *path*.  Availability: Mac OS X.
 
-    .. warning::
-
-       In 3.0, this function is removed.
+    .. note::
 
+       In Python 3.x, this function has been removed.
 
 
 .. function:: writePlistToResource(rootObject, path[, restype='plst'[, resid=0]])
 
     Write *rootObject* as a resource with type *restype* to the resource fork of
     *path*.  Availability: Mac OS X.
 
-    .. warning::
+    .. note::
 
-       In 3.0, this function is removed.
+       In Python 3.x, this function has been removed.
 
 
 
 The following class is available:
 
 .. class:: Data(data)
 
    Return a "data" wrapper object around the string *data*.  This is used in
    functions converting from/to plists to represent the ``<data>`` type
    available in plists.
 
    It has one attribute, :attr:`data`, that can be used to retrieve the Python
