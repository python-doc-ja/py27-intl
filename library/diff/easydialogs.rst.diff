--- r262/library/easydialogs.rst	2008-05-31 23:45:55.230251000 +0900
+++ r266/library/easydialogs.rst	2009-10-27 23:19:50.039185000 +0900
@@ -7,27 +7,27 @@
    :synopsis: Basic Macintosh dialogs.
    :deprecated:
 
 
 The :mod:`EasyDialogs` module contains some simple dialogs for the Macintosh.
 The dialogs get launched in a separate application which appears in the dock and
 must be clicked on for the dialogs be displayed.  All routines take an optional
 resource ID parameter *id* with which one can override the :const:`DLOG`
 resource used for the dialog, provided that the dialog items correspond (both
 type and item number) to those in the default :const:`DLOG` resource. See source
 code for details.
 
-.. warning::
+.. note::
 
-   This module is removed in 3.0.
+   This module has been removed in Python 3.x.
 
 
 The :mod:`EasyDialogs` module defines the following functions:
 
 
 .. function:: Message(str[, id[, ok]])
 
    Displays a modal dialog with the message text *str*, which should be at most 255
    characters long. The button text defaults to "OK", but is set to the string
    argument *ok* if the latter is supplied. Control is returned when the user
    clicks the "OK" button.
 
@@ -91,25 +91,25 @@
    | *optstr* format      | Command-line format                      |
    +======================+==========================================+
    | ``x``                | :option:`-x` (short option)              |
    +----------------------+------------------------------------------+
    | ``x:`` or ``x=``     | :option:`-x` (short option with value)   |
    +----------------------+------------------------------------------+
    | ``xyz``              | :option:`--xyz` (long option)            |
    +----------------------+------------------------------------------+
    | ``xyz:`` or ``xyz=`` | :option:`--xyz` (long option with value) |
    +----------------------+------------------------------------------+
 
    *commandlist* is a list of items of the form *cmdstr* or ``(cmdstr, descr)``,
-   where *descr* is as above.  The *cmdstr*s will appear in a popup menu.  When
+   where *descr* is as above.  The *cmdstr*\ s will appear in a popup menu.  When
    chosen, the text of *cmdstr* will be appended to the command line as is, except
    that a trailing ``':'`` or ``'='`` (if present) will be trimmed off.
 
    .. versionadded:: 2.0
 
 
 .. function:: AskFileForOpen( [message] [, typeList] [, defaultLocation] [, defaultOptionFlags] [, location] [, clientName] [, windowTitle] [, actionButtonLabel] [, cancelButtonLabel] [, preferenceKey] [, popupExtension] [, eventProc] [, previewProc] [, filterProc] [, wanted] )
 
    Post a dialog asking the user for a file to open, and return the file selected
    or :const:`None` if the user cancelled. *message* is a text message to display,
    *typeList* is a list of 4-char filetypes allowable, *defaultLocation* is the
    pathname, :class:`FSSpec` or :class:`FSRef` of the folder to show initially,
