@@ -7,24 +7,28 @@
 .. moduleauthor:: Greg Ward <gward@python.net>
 .. sectionauthor:: Greg Ward <gward@python.net>
 
 
 .. versionadded:: 2.3
 
 The :mod:`textwrap` module provides two convenience functions, :func:`wrap` and
 :func:`fill`, as well as :class:`TextWrapper`, the class that does all the work,
 and a utility function  :func:`dedent`.  If you're just wrapping or filling one
 or two  text strings, the convenience functions should be good enough;
 otherwise,  you should use an instance of :class:`TextWrapper` for efficiency.
 
+.. seealso::
+
+   Latest version of the `textwrap module Python source code
+   <http://svn.python.org/view/python/branches/release27-maint/Lib/textwrap.py?view=markup>`_
 
 .. function:: wrap(text[, width[, ...]])
 
    Wraps the single paragraph in *text* (a string) so every line is at most *width*
    characters long.  Returns a list of output lines, without final newlines.
 
    Optional keyword arguments correspond to the instance attributes of
    :class:`TextWrapper`, documented below.  *width* defaults to ``70``.
 
 
 .. function:: fill(text[, width[, ...]])
 
@@ -112,24 +116,31 @@
    .. attribute:: replace_whitespace
 
       (default: ``True``) If true, each whitespace character (as defined by
       ``string.whitespace``) remaining after tab expansion will be replaced by a
       single space.
 
       .. note::
 
          If :attr:`expand_tabs` is false and :attr:`replace_whitespace` is true,
          each tab character will be replaced by a single space, which is *not*
          the same as tab expansion.
 
+      .. note::
+
+         If :attr:`replace_whitespace` is false, newlines may appear in the
+         middle of a line and cause strange output. For this reason, text should
+         be split into paragraphs (using :meth:`str.splitlines` or similar)
+         which are wrapped separately.
+
 
    .. attribute:: drop_whitespace
 
       (default: ``True``) If true, whitespace that, after wrapping, happens to
       end up at the beginning or end of a line is dropped (leading whitespace in
       the first line is always preserved, though).
 
       .. versionadded:: 2.6
          Whitespace was always dropped in earlier versions.
 
 
    .. attribute:: initial_indent
