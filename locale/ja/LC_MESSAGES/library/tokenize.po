# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2015, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-11-29 03:44+0900\n"
"PO-Revision-Date: 2015-11-28 19:25+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc-ja/python-27/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/tokenize.rst:2
msgid ":mod:`tokenize` --- Tokenizer for Python source"
msgstr ":mod:`tokenize` --- Pythonソースのためのトークナイザ"

#: ../../library/tokenize.rst:9
msgid "**Source code:** :source:`Lib/tokenize.py`"
msgstr "**ソースコード:** :source:`Lib/tokenize.py`"

#: ../../library/tokenize.rst:13
msgid ""
"The :mod:`tokenize` module provides a lexical scanner for Python source "
"code, implemented in Python.  The scanner in this module returns comments as"
" tokens as well, making it useful for implementing \"pretty-printers,\" "
"including colorizers for on-screen displays."
msgstr ":mod:`tokenize` モジュールでは、Python で実装された Python ソースコードの字句解析器を提供します。さらに、このモジュールの字句解析器はコメントもトークンとして返します。このため、このモジュールはスクリーン上で表示する際の色付け機能 (colorizers) を含む \"清書出力器 (pretty-printer)\" を実装する上で便利です。"

#: ../../library/tokenize.rst:18
msgid ""
"To simplify token stream handling, all :ref:`operators` and "
":ref:`delimiters` tokens are returned using the generic :data:`token.OP` "
"token type.  The exact type can be determined by checking the second field "
"(containing the actual token string matched) of the tuple returned from "
":func:`tokenize.generate_tokens` for the character sequence that identifies "
"a specific operator token."
msgstr ""

#: ../../library/tokenize.rst:25
msgid "The primary entry point is a :term:`generator`:"
msgstr "第一のエントリポイントはジェネレータ(:term:`generator`)です:"

#: ../../library/tokenize.rst:29
msgid ""
"The :func:`generate_tokens` generator requires one argument, *readline*, "
"which must be a callable object which provides the same interface as the "
":meth:`readline` method of built-in file objects (see section :ref:`bltin-"
"file-objects`).  Each call to the function should return one line of input "
"as a string. Alternately, *readline* may be a callable object that signals "
"completion by raising :exc:`StopIteration`."
msgstr ""

#: ../../library/tokenize.rst:36
msgid ""
"The generator produces 5-tuples with these members: the token type; the "
"token string; a 2-tuple ``(srow, scol)`` of ints specifying the row and "
"column where the token begins in the source; a 2-tuple ``(erow, ecol)`` of "
"ints specifying the row and column where the token ends in the source; and "
"the line on which the token was found.  The line passed (the last tuple "
"item) is the *logical* line; continuation lines are included."
msgstr ""

#: ../../library/tokenize.rst:45
msgid "An older entry point is retained for backward compatibility:"
msgstr ""

#: ../../library/tokenize.rst:50
msgid ""
"The :func:`tokenize` function accepts two parameters: one representing the "
"input stream, and one providing an output mechanism for :func:`tokenize`."
msgstr ""

#: ../../library/tokenize.rst:53
msgid ""
"The first parameter, *readline*, must be a callable object which provides "
"the same interface as the :meth:`readline` method of built-in file objects "
"(see section :ref:`bltin-file-objects`).  Each call to the function should "
"return one line of input as a string. Alternately, *readline* may be a "
"callable object that signals completion by raising :exc:`StopIteration`."
msgstr ""

#: ../../library/tokenize.rst:59
msgid "Added :exc:`StopIteration` support."
msgstr ""

#: ../../library/tokenize.rst:62
msgid ""
"The second parameter, *tokeneater*, must also be a callable object.  It is "
"called once for each token, with five arguments, corresponding to the tuples"
" generated by :func:`generate_tokens`."
msgstr ""

#: ../../library/tokenize.rst:66
msgid ""
"All constants from the :mod:`token` module are also exported from "
":mod:`tokenize`, as are two additional token type values that might be "
"passed to the *tokeneater* function by :func:`tokenize`:"
msgstr ""

#: ../../library/tokenize.rst:73
msgid "Token value used to indicate a comment."
msgstr "コメントであることを表すために使われるトークン値です。"

#: ../../library/tokenize.rst:78
msgid ""
"Token value used to indicate a non-terminating newline.  The NEWLINE token "
"indicates the end of a logical line of Python code; NL tokens are generated "
"when a logical line of code is continued over multiple physical lines."
msgstr "終わりではない改行を表すために使われるトークン値。NEWLINE トークンは Pythonコードの論理行の終わりを表します。NLトークンはコードの論理行が複数の物理行にわたって続いているときに作られます。"

#: ../../library/tokenize.rst:82
msgid ""
"Another function is provided to reverse the tokenization process. This is "
"useful for creating tools that tokenize a script, modify the token stream, "
"and write back the modified script."
msgstr "もう一つの関数がトークン化プロセスを逆転するために提供されています。これは、スクリプトを字句解析し、トークンのストリームに変更を加え、変更されたスクリプトを書き戻すようなツールを作成する際に便利です。"

#: ../../library/tokenize.rst:89
msgid ""
"Converts tokens back into Python source code.  The *iterable* must return "
"sequences with at least two elements, the token type and the token string.  "
"Any additional sequence elements are ignored."
msgstr ""

#: ../../library/tokenize.rst:93
msgid ""
"The reconstructed script is returned as a single string.  The result is "
"guaranteed to tokenize back to match the input so that the conversion is "
"lossless and round-trips are assured.  The guarantee applies only to the "
"token type and token string as the spacing between tokens (column positions)"
" may change."
msgstr "再構築されたスクリプトは一つの文字列として返されます。得られる結果はもう一度字句解析すると入力と一致することが保証されるので、変換がロスレスでありラウンドトリップできることは間違いありません。この保証はトークン型およびトークン文字列に対してのものでトークン間のスペース (コラム位置)のようなものは変わることがあり得ます。"

#: ../../library/tokenize.rst:103
msgid ""
"Raised when either a docstring or expression that may be split over several "
"lines is not completed anywhere in the file, for example::"
msgstr "docstring や複数行にわたることが許される式がファイル内のどこかで終わっていない場合に送出されます。例えば::"

#: ../../library/tokenize.rst:109
msgid "or::"
msgstr "もしくは::"

#: ../../library/tokenize.rst:115
msgid ""
"Note that unclosed single-quoted strings do not cause an error to be raised."
" They are tokenized as ``ERRORTOKEN``, followed by the tokenization of their"
" contents."
msgstr "閉じていないシングルクォート文字列は送出されるべきエラーの原因とならないことに注意してください。それらは ``ERRORTOKEN`` とトークン化され、続いてその内容がトークン化されます。"

#: ../../library/tokenize.rst:119
msgid ""
"Example of a script re-writer that transforms float literals into Decimal "
"objects::"
msgstr ""
