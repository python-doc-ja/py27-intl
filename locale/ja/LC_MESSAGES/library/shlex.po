# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2015, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-11-29 03:44+0900\n"
"PO-Revision-Date: 2015-11-28 19:13+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc-ja/python-27/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/shlex.rst:2
msgid ":mod:`shlex` --- Simple lexical analysis"
msgstr ":mod:`shlex` --- 単純な字句解析"

#: ../../library/shlex.rst:14
msgid "**Source code:** :source:`Lib/shlex.py`"
msgstr "**ソースコード:** :source:`Lib/shlex.py`"

#: ../../library/shlex.rst:19
msgid ""
"The :class:`~shlex.shlex` class makes it easy to write lexical analyzers for"
" simple syntaxes resembling that of the Unix shell.  This will often be "
"useful for writing minilanguages, (for example, in run control files for "
"Python applications) or for parsing quoted strings."
msgstr ""

#: ../../library/shlex.rst:24
msgid "Prior to Python 2.7.3, this module did not support Unicode input."
msgstr ""

#: ../../library/shlex.rst:26
msgid "The :mod:`shlex` module defines the following functions:"
msgstr ":mod:`shlex` モジュールは以下の関数を定義します:"

#: ../../library/shlex.rst:31
msgid ""
"Split the string *s* using shell-like syntax. If *comments* is "
":const:`False` (the default), the parsing of comments in the given string "
"will be disabled (setting the :attr:`~shlex.commenters` attribute of the "
":class:`~shlex.shlex` instance to the empty string).  This function operates"
" in POSIX mode by default, but uses non-POSIX mode if the *posix* argument "
"is false."
msgstr ""

#: ../../library/shlex.rst:40
msgid "Added the *posix* parameter."
msgstr ""

#: ../../library/shlex.rst:45
msgid ""
"Since the :func:`split` function instantiates a :class:`~shlex.shlex` "
"instance, passing ``None`` for *s* will read the string to split from "
"standard input."
msgstr ""

#: ../../library/shlex.rst:49
msgid "The :mod:`shlex` module defines the following class:"
msgstr ":mod:`shlex` モジュールは以下のクラスを定義します:"

#: ../../library/shlex.rst:54
msgid ""
"A :class:`~shlex.shlex` instance or subclass instance is a lexical analyzer "
"object.  The initialization argument, if present, specifies where to read "
"characters from. It must be a file-/stream-like object with "
":meth:`~io.TextIOBase.read` and :meth:`~io.TextIOBase.readline` methods, or "
"a string (strings are accepted since Python 2.3).  If no argument is given, "
"input will be taken from ``sys.stdin``.  The second optional argument is a "
"filename string, which sets the initial value of the :attr:`~shlex.infile` "
"attribute.  If the *instream* argument is omitted or equal to ``sys.stdin``,"
" this second argument defaults to \"stdin\".  The *posix* argument was "
"introduced in Python 2.3, and defines the operational mode.  When *posix* is"
" not true (default), the :class:`~shlex.shlex` instance will operate in "
"compatibility mode.  When operating in POSIX mode, :class:`~shlex.shlex` "
"will try to be as close as possible to the POSIX shell parsing rules."
msgstr ""

#: ../../library/shlex.rst:71
msgid "Module :mod:`ConfigParser`"
msgstr ""

#: ../../library/shlex.rst:72
msgid ""
"Parser for configuration files similar to the Windows :file:`.ini` files."
msgstr "Windows :file:`.ini` ファイルに似た設定ファイルのパーザ。"

#: ../../library/shlex.rst:78
msgid "shlex Objects"
msgstr "shlex オブジェクト"

#: ../../library/shlex.rst:80
msgid "A :class:`~shlex.shlex` instance has the following methods:"
msgstr ""

#: ../../library/shlex.rst:85
msgid ""
"Return a token.  If tokens have been stacked using :meth:`push_token`, pop a"
" token off the stack.  Otherwise, read one from the input stream.  If "
"reading encounters an immediate end-of-file, :attr:`eof` is returned (the "
"empty string (``''``) in non-POSIX mode, and ``None`` in POSIX mode)."
msgstr ""

#: ../../library/shlex.rst:93
msgid "Push the argument onto the token stack."
msgstr "トークンスタックに引数文字列をスタックします。"

#: ../../library/shlex.rst:98
msgid ""
"Read a raw token.  Ignore the pushback stack, and do not interpret source "
"requests.  (This is not ordinarily a useful entry point, and is documented "
"here only for the sake of completeness.)"
msgstr "生 (raw) のトークンを読み出します。プッシュバックスタックを無視し、かつソースリクエストを解釈しません。 (通常これは便利なエントリポイントではありません。完全性のためにここで記述されています。)"

#: ../../library/shlex.rst:105
msgid ""
"When :class:`~shlex.shlex` detects a source request (see :attr:`source` "
"below) this method is given the following token as argument, and expected to"
" return a tuple consisting of a filename and an open file-like object."
msgstr ""

#: ../../library/shlex.rst:109
msgid ""
"Normally, this method first strips any quotes off the argument.  If the "
"result is an absolute pathname, or there was no previous source request in "
"effect, or the previous source was a stream (such as ``sys.stdin``), the "
"result is left alone.  Otherwise, if the result is a relative pathname, the "
"directory part of the name of the file immediately before it on the source "
"inclusion stack is prepended (this behavior is like the way the C "
"preprocessor handles ``#include \"file.h\"``)."
msgstr "通常、このメソッドはまず引数から何らかのクオートを剥ぎ取ります。処理後の引数が絶対パス名であった場合か、以前に有効になったソースリクエストが存在しない場合か、以前のソースが (``sys.stdin`` のような) ストリームであった場合、この結果はそのままにされます。そうでない場合で、処理後の引数が相対パス名の場合、ソースインクルードスタックにある直前のファイル名からディレクトリ部分が取り出され、相対パスの前の部分に追加されます (この動作は C 言語プリプロセッサにおける ``#include \"file.h\"`` の扱いと同様です)。"

#: ../../library/shlex.rst:117
msgid ""
"The result of the manipulations is treated as a filename, and returned as "
"the first component of the tuple, with :func:`open` called on it to yield "
"the second component. (Note: this is the reverse of the order of arguments "
"in instance initialization!)"
msgstr "これらの操作の結果はファイル名として扱われ、タプルの最初の要素として返されます。同時にこのファイル名で :func:`open` を呼び出した結果が二つ目の要素になります (注意: インスタンス初期化のときとは引数の並びが逆になっています！)"

#: ../../library/shlex.rst:122
msgid ""
"This hook is exposed so that you can use it to implement directory search "
"paths, addition of file extensions, and other namespace hacks. There is no "
"corresponding 'close' hook, but a shlex instance will call the "
":meth:`~io.IOBase.close` method of the sourced input stream when it returns "
"EOF."
msgstr ""

#: ../../library/shlex.rst:128
msgid ""
"For more explicit control of source stacking, use the :meth:`push_source` "
"and :meth:`pop_source` methods."
msgstr "ソーススタックをより明示的に操作するには、 :meth:`push_source` および :meth:`pop_source` メソッドを使ってください。"

#: ../../library/shlex.rst:134
msgid ""
"Push an input source stream onto the input stack.  If the filename argument "
"is specified it will later be available for use in error messages.  This is "
"the same method used internally by the :meth:`sourcehook` method."
msgstr "入力ソースストリームを入力スタックにプッシュします。ファイル名引数が指定された場合、以後のエラーメッセージ中で利用することができます。 :meth:`sourcehook` メソッドが内部で使用しているのと同じメソッドです。"

#: ../../library/shlex.rst:143
msgid ""
"Pop the last-pushed input source from the input stack. This is the same "
"method used internally when the lexer reaches EOF on a stacked input stream."
msgstr "最後にプッシュされた入力ソースを入力スタックからポップします。字句解析器がスタック上の入力ストリームの EOF に到達した際に利用するメソッドと同じです。"

#: ../../library/shlex.rst:151
msgid ""
"This method generates an error message leader in the format of a Unix C "
"compiler error label; the format is ``'\"%s\", line %d: '``, where the "
"``%s`` is replaced with the name of the current source file and the ``%d`` "
"with the current input line number (the optional arguments can be used to "
"override these)."
msgstr "このメソッドはエラーメッセージの論述部分を Unix C コンパイラエラーラベルの形式で生成します; この書式は ``'\"%s\", line %d: '`` で、``%s`` は現在のソースファイル名で置き換えられ、``%d`` は現在の入力行番号で置き換えられます (オプションの引数を使ってこれらを上書きすることもできます)。"

#: ../../library/shlex.rst:156
msgid ""
"This convenience is provided to encourage :mod:`shlex` users to generate "
"error messages in the standard, parseable format understood by Emacs and "
"other Unix tools."
msgstr "このやり方は、 :mod:`shlex` のユーザに対して、Emacs やその他の Unix ツール群が解釈できる一般的な書式でのメッセージを生成することを推奨するために提供されています。"

#: ../../library/shlex.rst:160
msgid ""
"Instances of :class:`~shlex.shlex` subclasses have some public instance "
"variables which either control lexical analysis or can be used for "
"debugging:"
msgstr ""

#: ../../library/shlex.rst:166
msgid ""
"The string of characters that are recognized as comment beginners. All "
"characters from the comment beginner to end of line are ignored. Includes "
"just ``'#'`` by default."
msgstr "コメントの開始として認識される文字列です。コメントの開始から行末までのすべてのキャラクタ文字は無視されます。標準では単に ``'#'`` が入っています。"

#: ../../library/shlex.rst:173
msgid ""
"The string of characters that will accumulate into multi-character tokens.  "
"By default, includes all ASCII alphanumerics and underscore."
msgstr "複数文字からなるトークンを構成するためにバッファに蓄積していくような文字からなる文字列です。標準では、全ての ASCII 英数字およびアンダースコアが入っています。"

#: ../../library/shlex.rst:179
msgid ""
"Characters that will be considered whitespace and skipped.  Whitespace "
"bounds tokens.  By default, includes space, tab, linefeed and carriage-"
"return."
msgstr "空白と見なされ、読み飛ばされる文字群です。空白はトークンの境界を作ります。標準では、スペース、タブ、改行 (linefeed) および復帰 (carriage-return) が入っています。"

#: ../../library/shlex.rst:185
msgid ""
"Characters that will be considered as escape. This will be only used in "
"POSIX mode, and includes just ``'\\'`` by default."
msgstr "エスケープ文字と見なされる文字群です。これは POSIX モードでのみ使われ、デフォルトでは ``'\\'`` だけが入っています。"

#: ../../library/shlex.rst:193
msgid ""
"Characters that will be considered string quotes.  The token accumulates "
"until the same quote is encountered again (thus, different quote types "
"protect each other as in the shell.)  By default, includes ASCII single and "
"double quotes."
msgstr "文字列引用符と見なされる文字群です。トークンを構成する際、同じクオートが再び出現するまで文字をバッファに蓄積します (すなわち、異なるクオート形式はシェル中で互いに保護し合う関係にあります)。標準では、ASCII 単引用符および二重引用符が入っています。"

#: ../../library/shlex.rst:200
msgid ""
"Characters in :attr:`quotes` that will interpret escape characters defined "
"in :attr:`escape`.  This is only used in POSIX mode, and includes just "
"``'\"'`` by default."
msgstr ":attr:`quotes` のうち、 :attr:`escape` で定義されたエスケープ文字を解釈する文字群です。これは POSIX モードでのみ使われ、デフォルトでは  ``'\"'`` だけが入っています。"

#: ../../library/shlex.rst:209
msgid ""
"If ``True``, tokens will only be split in whitespaces. This is useful, for "
"example, for parsing command lines with :class:`~shlex.shlex`, getting "
"tokens in a similar way to shell arguments."
msgstr ""

#: ../../library/shlex.rst:218
msgid ""
"The name of the current input file, as initially set at class instantiation "
"time or stacked by later source requests.  It may be useful to examine this "
"when constructing error messages."
msgstr "現在の入力ファイル名です。クラスのインスタンス化時に初期設定されるか、その後のソースリクエストでスタックされます。エラーメッセージを構成する際にこの値を調べると便利なことがあります。"

#: ../../library/shlex.rst:225
msgid ""
"The input stream from which this :class:`~shlex.shlex` instance is reading "
"characters."
msgstr ""

#: ../../library/shlex.rst:231
msgid ""
"This attribute is ``None`` by default.  If you assign a string to it, that "
"string will be recognized as a lexical-level inclusion request similar to "
"the ``source`` keyword in various shells.  That is, the immediately "
"following token will opened as a filename and input taken from that stream "
"until EOF, at which point the :meth:`~io.IOBase.close` method of that stream"
" will be called and the input source will again become the original input "
"stream.  Source requests may be stacked any number of levels deep."
msgstr ""

#: ../../library/shlex.rst:242
msgid ""
"If this attribute is numeric and ``1`` or more, a :class:`~shlex.shlex` "
"instance will print verbose progress output on its behavior.  If you need to"
" use this, you can read the module source code to learn the details."
msgstr ""

#: ../../library/shlex.rst:249
msgid "Source line number (count of newlines seen so far plus one)."
msgstr "ソース行番号 (遭遇した改行の数に 1 を加えたもの) です。"

#: ../../library/shlex.rst:254
msgid ""
"The token buffer.  It may be useful to examine this when catching "
"exceptions."
msgstr "トークンバッファです。例外を捕捉した際にこの値を調べると便利なことがあります。"

#: ../../library/shlex.rst:259
msgid ""
"Token used to determine end of file. This will be set to the empty string "
"(``''``), in non-POSIX mode, and to ``None`` in POSIX mode."
msgstr "ファイルの終端を決定するのに使われるトークンです。非 POSIX モードでは空文字列 (``''``)、POSIX モードでは ``None`` が入ります。"

#: ../../library/shlex.rst:268
msgid "Parsing Rules"
msgstr "解析規則"

#: ../../library/shlex.rst:270
msgid ""
"When operating in non-POSIX mode, :class:`~shlex.shlex` will try to obey to "
"the following rules."
msgstr ""

#: ../../library/shlex.rst:273
msgid ""
"Quote characters are not recognized within words (``Do\"Not\"Separate`` is "
"parsed as the single word ``Do\"Not\"Separate``);"
msgstr "ワード内の引用符を認識しない (``Do\"Not\"Separate`` は単一ワード ``Do\"Not\"Separate`` として解析されます);"

#: ../../library/shlex.rst:276
msgid "Escape characters are not recognized;"
msgstr "エスケープ文字を認識しない;"

#: ../../library/shlex.rst:278
msgid ""
"Enclosing characters in quotes preserve the literal value of all characters "
"within the quotes;"
msgstr "引用符で囲まれた文字列は、引用符内の全ての文字リテラルを保持する;"

#: ../../library/shlex.rst:281
msgid ""
"Closing quotes separate words (``\"Do\"Separate`` is parsed as ``\"Do\"`` "
"and ``Separate``);"
msgstr "閉じ引用符でワードを区切る (``\"Do\"Separate`` は、``\"Do\"`` と ``Separate`` であると解析されます);"

#: ../../library/shlex.rst:284
msgid ""
"If :attr:`~shlex.whitespace_split` is ``False``, any character not declared "
"to be a word character, whitespace, or a quote will be returned as a single-"
"character token. If it is ``True``, :class:`~shlex.shlex` will only split "
"words in whitespaces;"
msgstr ""

#: ../../library/shlex.rst:289
msgid "EOF is signaled with an empty string (``''``);"
msgstr "空文字列 (``''``) で EOF を送出する;"

#: ../../library/shlex.rst:291
msgid "It's not possible to parse empty strings, even if quoted."
msgstr "引用符に囲んであっても、空文字列を解析しない。"

#: ../../library/shlex.rst:293
msgid ""
"When operating in POSIX mode, :class:`~shlex.shlex` will try to obey to the "
"following parsing rules."
msgstr ""

#: ../../library/shlex.rst:296
msgid ""
"Quotes are stripped out, and do not separate words "
"(``\"Do\"Not\"Separate\"`` is parsed as the single word ``DoNotSeparate``);"
msgstr "引用符を取り除き、引用符で単語を分解しない (``\"Do\"Not\"Separate\"`` は単一ワード ``DoNotSeparate`` として解析されます);"

#: ../../library/shlex.rst:299
msgid ""
"Non-quoted escape characters (e.g. ``'\\'``) preserve the literal value of "
"the next character that follows;"
msgstr "引用符で囲まれないエスケープ文字群 (``'\\'`` など) は直後に続く文字のリテラル値を保持する;"

#: ../../library/shlex.rst:302
msgid ""
"Enclosing characters in quotes which are not part of "
":attr:`~shlex.escapedquotes` (e.g. ``\"'\"``) preserve the literal value of "
"all characters within the quotes;"
msgstr ""

#: ../../library/shlex.rst:306
msgid ""
"Enclosing characters in quotes which are part of "
":attr:`~shlex.escapedquotes` (e.g. ``'\"'``) preserves the literal value of "
"all characters within the quotes, with the exception of the characters "
"mentioned in :attr:`~shlex.escape`.  The escape characters retain its "
"special meaning only when followed by the quote in use, or the escape "
"character itself. Otherwise the escape character will be considered a normal"
" character."
msgstr ""

#: ../../library/shlex.rst:314
msgid "EOF is signaled with a :const:`None` value;"
msgstr ":const:`None` で EOF を送出する;"

#: ../../library/shlex.rst:316
msgid "Quoted empty strings (``''``) are allowed;"
msgstr ""
