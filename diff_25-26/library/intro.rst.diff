--- rest25/library/intro.rst	2008-10-21 04:56:58.691056128 +0900
+++ rest26/library/intro.rst	2008-10-21 05:03:04.945258157 +0900
@@ -1,14 +1,14 @@
 
-.. _intro:
+.. _library-intro:
 
 ************
 Introduction
 ************
 
 The "Python library" contains several different kinds of components.
 
 It contains data types that would normally be considered part of the "core" of a
 language, such as numbers and lists.  For these types, the Python language core
 defines the form of literals and places some constraints on their semantics, but
 does not fully define the semantics.  (On the other hand, the language core does
 define syntactic properties like the spelling and priorities of operators.)
@@ -35,18 +35,17 @@
 grouped in chapters of related modules.  The ordering of the chapters as well as
 the ordering of the modules within each chapter is roughly from most relevant to
 least important.
 
 This means that if you start reading this manual from the start, and skip to the
 next chapter when you get bored, you will get a reasonable overview of the
 available modules and application areas that are supported by the Python
 library.  Of course, you don't *have* to read it like a novel --- you can also
 browse the table of contents (in front of the manual), or look for a specific
 function, module or term in the index (in the back).  And finally, if you enjoy
 learning about random subjects, you choose a random page number (see module
 :mod:`random`) and read a section or two.  Regardless of the order in which you
-read the sections of this manual, it helps to start  with chapter
-:ref:`builtin`, "Built-in Types, Exceptions and Functions," as the remainder of
-the manual assumes familiarity with this material.
+read the sections of this manual, it helps to start with chapter :ref:`builtin`,
+as the remainder of the manual assumes familiarity with this material.
 
 Let the show begin!
 
