--- rest25/library/termios.rst	2008-10-21 04:57:07.567055137 +0900
+++ rest26/library/termios.rst	2008-10-21 05:03:04.793234324 +0900
@@ -22,30 +22,30 @@
 
 This module also defines all the constants needed to work with the functions
 provided here; these have the same name as their counterparts in C.  Please
 refer to your system documentation for more information on using these terminal
 control interfaces.
 
 The module defines the following functions:
 
 
 .. function:: tcgetattr(fd)
 
    Return a list containing the tty attributes for file descriptor *fd*, as
-   follows: ``[``*iflag*, *oflag*, *cflag*, *lflag*, *ispeed*, *ospeed*, *cc*``]``
-   where *cc* is a list of the tty special characters (each a string of length 1,
-   except the items with indices :const:`VMIN` and :const:`VTIME`, which are
-   integers when these fields are defined).  The interpretation of the flags and
-   the speeds as well as the indexing in the *cc* array must be done using the
-   symbolic constants defined in the :mod:`termios` module.
+   follows: ``[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]`` where *cc* is a
+   list of the tty special characters (each a string of length 1, except the
+   items with indices :const:`VMIN` and :const:`VTIME`, which are integers when
+   these fields are defined).  The interpretation of the flags and the speeds as
+   well as the indexing in the *cc* array must be done using the symbolic
+   constants defined in the :mod:`termios` module.
 
 
 .. function:: tcsetattr(fd, when, attributes)
 
    Set the tty attributes for file descriptor *fd* from the *attributes*, which is
    a list like the one returned by :func:`tcgetattr`.  The *when* argument
    determines when the attributes are changed: :const:`TCSANOW` to change
    immediately, :const:`TCSADRAIN` to change after transmitting all queued output,
    or :const:`TCSAFLUSH` to change after transmitting all queued output and
    discarding all queued input.
 
 
@@ -74,25 +74,25 @@
    output, :const:`TCIOFF` to suspend input, or :const:`TCION` to restart input.
 
 
 .. seealso::
 
    Module :mod:`tty`
       Convenience functions for common terminal control operations.
 
 
 Example
 -------
 
-.. _termios example:
+.. _termios-example:
 
 Here's a function that prompts for a password with echoing turned off.  Note the
 technique using a separate :func:`tcgetattr` call and a :keyword:`try` ...
 :keyword:`finally` statement to ensure that the old tty attributes are restored
 exactly no matter what happens::
 
    def getpass(prompt = "Password: "):
        import termios, sys
        fd = sys.stdin.fileno()
        old = termios.tcgetattr(fd)
        new = termios.tcgetattr(fd)
        new[3] = new[3] & ~termios.ECHO          # lflags
