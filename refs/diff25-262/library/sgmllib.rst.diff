--- rest25/library/sgmllib.rst	2008-12-19 16:58:07.000000000 +0900
+++ rest262/library/sgmllib.rst	2009-04-05 05:02:09.000000000 +0900
@@ -1,43 +1,45 @@
-
 :mod:`sgmllib` --- Simple SGML parser
 =====================================
 
 .. module:: sgmllib
    :synopsis: Only as much of an SGML parser as needed to parse HTML.
+   :deprecated:
 
+.. deprecated:: 2.6
+    The :mod:`sgmllib` module has been removed in Python 3.0.
 
 .. index:: single: SGML
 
 This module defines a class :class:`SGMLParser` which serves as the basis for
 parsing text files formatted in SGML (Standard Generalized Mark-up Language).
 In fact, it does not provide a full SGML parser --- it only parses SGML insofar
 as it is used by HTML, and the module only exists as a base for the
 :mod:`htmllib` module.  Another HTML parser which supports XHTML and offers a
 somewhat different interface is available in the :mod:`HTMLParser` module.
 
 
 .. class:: SGMLParser()
 
    The :class:`SGMLParser` class is instantiated without arguments. The parser is
    hardcoded to recognize the following constructs:
 
-* Opening and closing tags of the form ``<tag attr="value" ...>`` and
+   * Opening and closing tags of the form ``<tag attr="value" ...>`` and
      ``</tag>``, respectively.
 
-* Numeric character references of the form ``&#name;``.
+   * Numeric character references of the form ``&#name;``.
 
-* Entity references of the form ``&name;``.
+   * Entity references of the form ``&name;``.
 
-* SGML comments of the form ``<!--text-->``.  Note that spaces, tabs, and
+   * SGML comments of the form ``<!--text-->``.  Note that spaces, tabs, and
      newlines are allowed between the trailing ``>`` and the immediately preceding
      ``--``.
 
 A single exception is defined as well:
 
 
 .. exception:: SGMLParseError
 
    Exception raised by the :class:`SGMLParser` class when it encounters an error
    while parsing.
 
    .. versionadded:: 2.1
@@ -122,25 +124,25 @@
 
 .. method:: SGMLParser.handle_data(data)
 
    This method is called to process arbitrary data.  It is intended to be
    overridden by a derived class; the base class implementation does nothing.
 
 
 .. method:: SGMLParser.handle_charref(ref)
 
    This method is called to process a character reference of the form ``&#ref;``.
    The base implementation uses :meth:`convert_charref` to convert the reference to
    a string.  If that method returns a string, it is passed to :meth:`handle_data`,
-   otherwise :meth:`unknown_charref(ref)` is called to handle the error.
+   otherwise ``unknown_charref(ref)`` is called to handle the error.
 
    .. versionchanged:: 2.5
       Use :meth:`convert_charref` instead of hard-coding the conversion.
 
 
 .. method:: SGMLParser.convert_charref(ref)
 
    Convert a character reference to a string, or ``None``.  *ref* is the reference
    passed in as a string.  In the base implementation, *ref* must be a decimal
    number in the range 0-255.  It converts the code point found using the
    :meth:`convert_codepoint` method. If *ref* is invalid or out of range, this
    method returns ``None``.  This method is called by the default
