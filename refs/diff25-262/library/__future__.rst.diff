--- rest25/library/__future__.rst	2008-12-19 16:58:07.000000000 +0900
+++ rest262/library/__future__.rst	2009-04-05 05:02:09.000000000 +0900
@@ -1,38 +1,37 @@
-
 :mod:`__future__` --- Future statement definitions
 ==================================================
 
 .. module:: __future__
    :synopsis: Future statement definitions
 
 
 :mod:`__future__` is a real module, and serves three purposes:
 
 * To avoid confusing existing tools that analyze import statements and expect to
   find the modules they're importing.
 
 * To ensure that future_statements run under releases prior to 2.1 at least
   yield runtime exceptions (the import of :mod:`__future__` will fail, because
   there was no module of that name prior to 2.1).
 
 * To document when incompatible changes were introduced, and when they will be
   --- or were --- made mandatory.  This is a form of executable documentation, and
-  can be inspected programatically via importing :mod:`__future__` and examining
+  can be inspected programmatically via importing :mod:`__future__` and examining
   its contents.
 
 Each statement in :file:`__future__.py` is of the form::
 
-   FeatureName = "_Feature(" OptionalRelease "," MandatoryRelease ","
-                           CompilerFlag ")"
+   FeatureName = _Feature(OptionalRelease, MandatoryRelease,
+                          CompilerFlag)
 
 
 where, normally, *OptionalRelease* is less than *MandatoryRelease*, and both are
 5-tuples of the same form as ``sys.version_info``::
 
    (PY_MAJOR_VERSION, # the 2 in 2.1.0a3; an int
     PY_MINOR_VERSION, # the 1; an int
     PY_MICRO_VERSION, # the 0; an int
     PY_RELEASE_LEVEL, # "alpha", "beta", "candidate" or "final"; string
     PY_RELEASE_SERIAL # the 3; an int
    )
 
