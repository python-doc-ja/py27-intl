--- rest25/distutils/examples.rst	2008-12-19 16:58:05.000000000 +0900
+++ rest262/distutils/examples.rst	2009-04-15 11:13:47.000000000 +0900
@@ -2,45 +2,45 @@
 
 ********
 Examples
 ********
 
 This chapter provides a number of basic examples to help get started with
 distutils.  Additional information about using distutils can be found in the
 Distutils Cookbook.
 
 
 .. seealso::
 
-   `Distutils Cookbook <http://www.python.org/cgi-bin/moinmoin/DistutilsCookbook>`_
+   `Distutils Cookbook <http://wiki.python.org/moin/Distutils/Cookbook>`_
       Collection of recipes showing how to achieve more control over distutils.
 
 
 .. _pure-mod:
 
 Pure Python distribution (by module)
 ====================================
 
 If you're just distributing a couple of modules, especially if they don't live
 in a particular package, you can specify them individually using the
 :option:`py_modules` option in the setup script.
 
 In the simplest case, you'll have two files to worry about: a setup script and
 the single module you're distributing, :file:`foo.py` in this example::
 
    <root>/
            setup.py
            foo.py
 
-(In all diagrams in this section, ``<root>`` will refer to the distribution root
+(In all diagrams in this section, *<root>* will refer to the distribution root
 directory.)  A minimal setup script to describe this situation would be::
 
    from distutils.core import setup
    setup(name='foo',
          version='1.0',
          py_modules=['foo'],
          )
 
 Note that the name of the distribution is specified independently with the
 :option:`name` option, and there's no rule that says it has to be the same as
 the name of the sole module in the distribution (although that's probably a good
 convention to follow).  However, the distribution name is used to generate
