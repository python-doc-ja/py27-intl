--- rest26/distutils/apiref.rst	2008-12-19 16:58:09.000000000 +0900
+++ rest262/distutils/apiref.rst	2009-04-07 00:06:52.000000000 +0900
@@ -79,34 +79,41 @@
    |                    | class to use                   | :class:`distutils.core.Distribution`                        |
    +--------------------+--------------------------------+-------------------------------------------------------------+
    | *script_name*      | The name of the setup.py       | a string                                                    |
    |                    | script - defaults to           |                                                             |
    |                    | ``sys.argv[0]``                |                                                             |
    +--------------------+--------------------------------+-------------------------------------------------------------+
    | *script_args*      | Arguments to supply to the     | a list of strings                                           |
    |                    | setup script                   |                                                             |
    +--------------------+--------------------------------+-------------------------------------------------------------+
    | *options*          | default options for the setup  | a string                                                    |
    |                    | script                         |                                                             |
    +--------------------+--------------------------------+-------------------------------------------------------------+
-   | *license*          | The license for the package    |                                                             |
+   | *license*          | The license for the package    | a string                                                    |
    +--------------------+--------------------------------+-------------------------------------------------------------+
-   | *keywords*         | Descriptive meta-data. See     |                                                             |
+   | *keywords*         | Descriptive meta-data, see     |                                                             |
    |                    | :pep:`314`                     |                                                             |
    +--------------------+--------------------------------+-------------------------------------------------------------+
    | *platforms*        |                                |                                                             |
    +--------------------+--------------------------------+-------------------------------------------------------------+
    | *cmdclass*         | A mapping of command names to  | a dictionary                                                |
    |                    | :class:`Command` subclasses    |                                                             |
    +--------------------+--------------------------------+-------------------------------------------------------------+
+   | *data_files*       | A list of data files to        | a list                                                      |
+   |                    | install                        |                                                             |
+   +--------------------+--------------------------------+-------------------------------------------------------------+
+   | *package_dir*      | A mapping of package to        | a dictionary                                                |
+   |                    | directory names                |                                                             |
+   +--------------------+--------------------------------+-------------------------------------------------------------+
+
 
 
 .. function:: run_setup(script_name[, script_args=None, stop_after='run'])
 
    Run a setup script in a somewhat controlled environment, and return  the
    :class:`distutils.dist.Distribution` instance that drives things.   This is
    useful if you need to find out the distribution meta-data  (passed as keyword
    args from *script* to :func:`setup`), or  the contents of the config files or
    command-line.
 
    *script_name* is a file that will be run with :func:`execfile` ``sys.argv[0]``
    will be replaced with *script* for the duration of the call.  *script_args* is a
@@ -172,27 +179,28 @@
    |                        | Source files may be C, C++,    |                           |
    |                        | SWIG (.i), platform-specific   |                           |
    |                        | resource files, or whatever    |                           |
    |                        | else is recognized by the      |                           |
    |                        | :command:`build_ext` command   |                           |
    |                        | as source for a Python         |                           |
    |                        | extension.                     |                           |
    +------------------------+--------------------------------+---------------------------+
    | *include_dirs*         | list of directories to search  | string                    |
    |                        | for C/C++ header files (in     |                           |
    |                        | Unix form for portability)     |                           |
    +------------------------+--------------------------------+---------------------------+
-   | *define_macros*        | list of macros to define; each | (string,string)  tuple or |
-   |                        | macro is defined using a       | (name,``None``)           |
-   |                        | 2-tuple, where 'value' is      |                           |
+   | *define_macros*        | list of macros to define; each | (string, string) tuple or |
+   |                        | macro is defined using a       | (name, ``None``)          |
+   |                        | 2-tuple ``(name, value)``,     |                           |
+   |                        | where *value* is               |                           |
    |                        | either the string to define it |                           |
    |                        | to or ``None`` to define it    |                           |
    |                        | without a particular value     |                           |
    |                        | (equivalent of ``#define FOO`` |                           |
    |                        | in source or :option:`-DFOO`   |                           |
    |                        | on Unix C compiler command     |                           |
    |                        | line)                          |                           |
    +------------------------+--------------------------------+---------------------------+
    | *undef_macros*         | list of macros to undefine     | string                    |
    |                        | explicitly                     |                           |
    +------------------------+--------------------------------+---------------------------+
    | *library_dirs*         | list of directories to search  | string                    |
@@ -738,25 +746,25 @@
 
    .. method:: CCompiler.warn(msg)
 
       Write a warning message *msg* to standard error.
 
 
    .. method:: CCompiler.debug_print(msg)
 
       If the *debug* flag is set on this :class:`CCompiler` instance, print  *msg* to
       standard output, otherwise do nothing.
 
 .. % \subsection{Compiler-specific modules}
-.. % 
+.. %
 .. % The following modules implement concrete subclasses of the abstract
 .. % \class{CCompiler} class. They should not be instantiated directly, but should
 .. % be created using \function{distutils.ccompiler.new_compiler()} factory
 .. % function.
 
 
 :mod:`distutils.unixccompiler` --- Unix C Compiler
 ==================================================
 
 .. module:: distutils.unixccompiler
    :synopsis: UNIX C Compiler
 
@@ -842,25 +850,25 @@
 :mod:`distutils.mwerkscompiler` --- Metrowerks CodeWarrior support
 ==================================================================
 
 .. module:: distutils.mwerkscompiler
    :synopsis: Metrowerks CodeWarrior support
 
 
 Contains :class:`MWerksCompiler`, an implementation of the abstract
 :class:`CCompiler` class for MetroWerks CodeWarrior on the pre-Mac OS X
 Macintosh. Needs work to support CW on Windows or Mac OS X.
 
 .. % \subsection{Utility modules}
-.. % 
+.. %
 .. % The following modules all provide general utility functions. They haven't
 .. % all been documented yet.
 
 
 :mod:`distutils.archive_util` ---  Archiving utilities
 ======================================================
 
 .. module:: distutils.archive_util
    :synopsis: Utility functions for creating archive files (tarballs, zip files, ...)
 
 
 This module provides a few functions for creating archive files, such as
@@ -1050,26 +1058,26 @@
    .. % changing it (ie. it's not already a hard/soft link to src OR
    .. % (not update) and (src newer than dst)).
 
 
 .. function:: move_file(src, dst[, verbose, dry_run])
 
    Move file *src* to *dst*. If *dst* is a directory, the file will be moved into
    it with the same name; otherwise, *src* is just renamed to *dst*.  Returns the
    new full name of the file.
 
    .. warning::
 
-      Handles cross-device moves on Unix using :func:`copy_file`.   What about other
-      systems???
+      Handles cross-device moves on Unix using :func:`copy_file`.  What about
+      other systems?
 
 
 .. function:: write_file(filename, contents)
 
    Create a file called *filename* and write *contents* (a sequence of strings
    without line terminators) to it.
 
 
 :mod:`distutils.util` --- Miscellaneous other utility functions
 ===============================================================
 
 .. module:: distutils.util
@@ -1091,24 +1099,42 @@
    important.
 
    Examples of returned values:
 
    * ``linux-i586``
    * ``linux-alpha``
    * ``solaris-2.6-sun4u``
    * ``irix-5.3``
    * ``irix64-6.2``
 
    For non-POSIX platforms, currently just returns ``sys.platform``.
 
+   For Mac OS X systems the OS version reflects the minimal version on which
+   binaries will run (that is, the value of ``MACOSX_DEPLOYMENT_TARGET``
+   during the build of Python), not the OS version of the current system.
+
+   For universal binary builds on Mac OS X the architecture value reflects
+   the univeral binary status instead of the architecture of the current
+   processor. For 32-bit universal binaries the architecture is ``fat``,
+   for 64-bit universal binaries the architecture is ``fat64``, and
+   for 4-way universal binaries the architecture is ``universal``.
+
+   Examples of returned values on Mac OS X:
+
+   * ``macosx-10.3-ppc``
+
+   * ``macosx-10.3-fat``
+
+   * ``macosx-10.5-universal``
+
    .. % XXX isn't this also provided by some other non-distutils module?
 
 
 .. function:: convert_path(pathname)
 
    Return 'pathname' as a name that will work on the native filesystem, i.e. split
    it on '/' and put it back together again using the current directory separator.
    Needed because filenames in the setup script are always supplied in Unix style,
    and have to be converted to the local convention before we can actually use them
    in the filesystem.  Raises :exc:`ValueError` on non-Unix-ish systems if
    *pathname* either  starts or ends with a slash.
 
@@ -1658,25 +1684,25 @@
       to :meth:`readline`, the lines will be returned most in most recent first order.
 
 
 :mod:`distutils.version` --- Version number classes
 ===================================================
 
 .. module:: distutils.version
    :synopsis: implements classes that represent module version numbers.
 
 
 .. % todo
 .. % \section{Distutils Commands}
-.. % 
+.. %
 .. % This part of Distutils implements the various Distutils commands, such
 .. % as \code{build}, \code{install} \&c. Each command is implemented as a
 .. % separate module, with the command name as the name of the module.
 
 
 :mod:`distutils.cmd` --- Abstract base class for Distutils commands
 ===================================================================
 
 .. module:: distutils.cmd
    :synopsis: This module provides the abstract base class Command. This class is subclassed
               by the modules in the distutils.command  subpackage.
 
@@ -1740,26 +1766,34 @@
    :synopsis: Build a "dumb" installer - a simple archive of files
 
 
 .. % todo
 
 
 :mod:`distutils.command.bdist_msi` --- Build a Microsoft Installer binary package
 =================================================================================
 
 .. module:: distutils.command.bdist_msi
    :synopsis: Build a binary distribution as a Windows MSI file
 
+.. class:: bdist_msi(Command)
 
-.. % todo
+   Builds a `Windows Installer`_ (.msi) binary package.
+
+   .. _Windows Installer: http://msdn.microsoft.com/en-us/library/cc185688(VS.85).aspx
+
+   In most cases, the ``bdist_msi`` installer is a better choice than the
+   ``bdist_wininst`` installer, because it provides better support for
+   Win64 platforms, allows administrators to perform non-interactive
+   installations, and allows installation through group policies.
 
 
 :mod:`distutils.command.bdist_rpm` --- Build a binary distribution as a Redhat RPM and SRPM
 ===========================================================================================
 
 .. module:: distutils.command.bdist_rpm
    :synopsis: Build a binary distribution as a Redhat RPM and SRPM
 
 
 .. % todo
 
 
