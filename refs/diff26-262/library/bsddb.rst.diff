--- rest26/library/bsddb.rst	2008-12-19 16:58:10.000000000 +0900
+++ rest262/library/bsddb.rst	2009-04-05 05:02:09.000000000 +0900
@@ -8,25 +8,25 @@
 
 .. deprecated:: 2.6
     The :mod:`bsddb` module has been deprecated for removal in Python 3.0.
 
 
 The :mod:`bsddb` module provides an interface to the Berkeley DB library.  Users
 can create hash, btree or record based library files using the appropriate open
 call. Bsddb objects behave generally like dictionaries.  Keys and values must be
 strings, however, so to use other objects as keys or to store other kinds of
 objects the user must serialize them somehow, typically using
 :func:`marshal.dumps` or  :func:`pickle.dumps`.
 
-The :mod:`bsddb` module requires a Berkeley DB library version from 3.3 thru
+The :mod:`bsddb` module requires a Berkeley DB library version from 4.0 thru
 4.7.
 
 
 .. seealso::
 
    http://www.jcea.es/programacion/pybsddb.htm
       The website with documentation for the :mod:`bsddb.db` Python Berkeley DB
       interface that closely mirrors the object oriented interface provided in
       Berkeley DB 4.x itself.
 
    http://www.oracle.com/database/berkeley-db/
       The Berkeley DB library.
@@ -163,38 +163,38 @@
    database is empty.
 
 
 .. method:: bsddbobject.sync()
 
    Synchronize the database on disk.
 
 Example::
 
    >>> import bsddb
    >>> db = bsddb.btopen('/tmp/spam.db', 'c')
    >>> for i in range(10): db['%d'%i] = '%d'% (i*i)
-   ... 
+   ...
    >>> db['3']
    '9'
    >>> db.keys()
    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
    >>> db.first()
    ('0', '0')
    >>> db.next()
    ('1', '1')
    >>> db.last()
    ('9', '81')
    >>> db.set_location('2')
    ('2', '4')
-   >>> db.previous() 
+   >>> db.previous()
    ('1', '1')
    >>> for k, v in db.iteritems():
    ...     print k, v
    0 0
    1 1
    2 4
    3 9
    4 16
    5 25
    6 36
    7 49
    8 64
