--- rest26/library/urllib.rst	2008-12-19 16:58:10.000000000 +0900
+++ rest262/library/urllib.rst	2009-04-07 00:06:53.000000000 +0900
@@ -40,25 +40,25 @@
    may not read until the end of the data stream; there is no good way to determine
    that the entire stream from a socket has been read in the general case.
 
    Except for the :meth:`info`, :meth:`getcode` and :meth:`geturl` methods,
    these methods have the same interface as for file objects --- see section
    :ref:`bltin-file-objects` in this manual.  (It is not a built-in file object,
    however, so it can't be used at those few places where a true built-in file
    object is required.)
 
    .. index:: module: mimetools
 
    The :meth:`info` method returns an instance of the class
-   :class:`mimetools.Message` containing meta-information associated with the
+   :class:`httplib.HTTPMessage` containing meta-information associated with the
    URL.  When the method is HTTP, these headers are those returned by the server
    at the head of the retrieved HTML page (including Content-Length and
    Content-Type).  When the method is FTP, a Content-Length header will be
    present if (as is now usual) the server passed back a file length in response
    to the FTP retrieval request. A Content-Type header will be present if the
    MIME type can be guessed.  When the method is local-file, returned headers
    will include a Date representing the file's last-modified time, a
    Content-Length giving file size, and a Content-Type containing a guess at the
    file's type. See also the description of the :mod:`mimetools` module.
 
    The :meth:`geturl` method returns the real URL of the page.  In some cases, the
    HTTP server redirects a client to another URL.  The :func:`urlopen` function
@@ -114,25 +114,25 @@
       filehandle = urllib.urlopen(some_url, proxies=None)
       filehandle = urllib.urlopen(some_url)
 
    Proxies which require authentication for use are not currently supported; this
    is considered an implementation limitation.
 
    .. versionchanged:: 2.3
       Added the *proxies* support.
 
    .. versionchanged:: 2.6
       Added :meth:`getcode` to returned object and support for the
       :envvar:`no_proxy` environment variable.
-      
+
    .. deprecated:: 2.6
       The :func:`urlopen` function has been removed in Python 3.0 in favor
       of :func:`urllib2.urlopen`.
 
 
 .. function:: urlretrieve(url[, filename[, reporthook[, data]]])
 
    Copy a network object denoted by a URL to a local file, if necessary. If the URL
    points to a local file, or a valid cached copy of the object exists, the object
    is not copied.  Return a tuple ``(filename, headers)`` where *filename* is the
    local file name under which the object can be found, and *headers* is whatever
    the :meth:`info` method of the object returned by :func:`urlopen` returned (for
