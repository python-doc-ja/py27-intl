--- rest26/library/parser.rst	2008-12-19 16:58:10.000000000 +0900
+++ rest262/library/parser.rst	2009-04-05 05:02:09.000000000 +0900
@@ -632,25 +632,25 @@
 the discovery of additional definitions within the code block represented by the
 parse tree.
 
 The initial :keyword:`if` test determines whether the nested suite is of the
 "short form" or the "long form."  The short form is used when the code block is
 on the same line as the definition of the code block, as in ::
 
    def square(x): "Square an argument."; return x ** 2
 
 while the long form uses an indented block and allows nested definitions::
 
    def make_power(exp):
-       "Make a function that raises an argument to the exponent `exp'."
+       "Make a function that raises an argument to the exponent `exp`."
        def raiser(x, y=exp):
            return x ** y
        return raiser
 
 When the short form is used, the code block may contain a docstring as the
 first, and possibly only, :const:`small_stmt` element.  The extraction of such a
 docstring is slightly different and requires only a portion of the complete
 pattern used in the more common case.  As implemented, the docstring will only
 be found if there is only one :const:`small_stmt` node in the
 :const:`simple_stmt` node. Since most functions and methods which use the short
 form do not provide a docstring, this may be considered sufficient.  The
 extraction of the docstring proceeds using the :func:`match` function as
