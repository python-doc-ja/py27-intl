--- rest26/library/dl.rst	2008-12-19 16:58:10.000000000 +0900
+++ rest262/library/dl.rst	2009-04-05 05:02:09.000000000 +0900
@@ -1,25 +1,25 @@
 
 :mod:`dl` --- Call C functions in shared objects
 ================================================
 
 .. module:: dl
    :platform: Unix
    :synopsis: Call C functions in shared objects.
    :deprecated:
-   
+
 .. deprecated:: 2.6
     The :mod:`dl` module has been removed in Python 3.0. Use the :mod:`ctypes`
     module instead.
-   
+
 .. sectionauthor:: Moshe Zadka <moshez@zadka.site.co.il>
 
 The :mod:`dl` module defines an interface to the :cfunc:`dlopen` function, which
 is the most common interface on Unix platforms for handling dynamically linked
 libraries. It allows the program to call arbitrary functions in such a library.
 
 .. warning::
 
    The :mod:`dl` module bypasses the Python type system and  error handling. If
    used incorrectly it may cause segmentation faults, crashes or other incorrect
    behaviour.
 
@@ -82,27 +82,27 @@
 
 
 .. method:: dl.close()
 
    Free all resources, except the memory.
 
 
 .. method:: dl.sym(name)
 
    Return the pointer for the function named *name*, as a number, if it exists in
    the referenced shared object, otherwise ``None``. This is useful in code like::
 
-      >>> if a.sym('time'): 
+      >>> if a.sym('time'):
       ...     a.call('time')
-      ... else: 
+      ... else:
       ...     time.time()
 
    (Note that this function will return a non-zero number, as zero is the *NULL*
    pointer)
 
 
 .. method:: dl.call(name[, arg1[, arg2...]])
 
    Call the function named *name* in the referenced shared object. The arguments
    must be either Python integers, which will be  passed as is, Python strings, to
    which a pointer will be passed,  or ``None``, which will be passed as *NULL*.
    Note that  strings should only be passed to functions as :ctype:`const char\*`,
