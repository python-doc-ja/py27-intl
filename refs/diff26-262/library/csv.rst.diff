--- rest26/library/csv.rst	2008-12-19 16:58:10.000000000 +0900
+++ rest262/library/csv.rst	2009-04-05 05:02:09.000000000 +0900
@@ -67,25 +67,25 @@
    *dialect* parameter can be given which is used to define a set of parameters
    specific to a particular CSV dialect.  It may be an instance of a subclass of
    the :class:`Dialect` class or one of the strings returned by the
    :func:`list_dialects` function.  The other optional *fmtparam* keyword arguments
    can be given to override individual formatting parameters in the current
    dialect.  For full details about the dialect and formatting parameters, see
    section :ref:`csv-fmt-params`.
 
    All data read are returned as strings.  No automatic data type conversion is
    performed.
 
    A short usage example::
- 
+
       >>> import csv
       >>> spamReader = csv.reader(open('eggs.csv'), delimiter=' ', quotechar='|')
       >>> for row in spamReader:
       ...     print ', '.join(row)
       Spam, Spam, Spam, Spam, Spam, Baked Beans
       Spam, Lovely Spam, Wonderful Spam
 
    .. versionchanged:: 2.5
       The parser is now stricter with respect to multi-line quoted fields. Previously,
       if a line ended within a quoted field without a terminating newline character, a
       newline would be inserted into the returned field. This behavior caused problems
       when reading files which contained carriage return characters within fields.
