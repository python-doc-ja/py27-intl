--- rest26/howto/webservers.rst	2008-12-19 16:58:09.000000000 +0900
+++ rest262/howto/webservers.rst	2009-04-05 05:01:49.000000000 +0900
@@ -79,36 +79,37 @@
 
    The Python standard library includes some modules that are helpful for
    creating plain CGI programs:
 
    * :mod:`cgi` -- Handling of user input in CGI scripts
    * :mod:`cgitb` -- Displays nice tracebacks when errors happen in of CGI
      applications, instead of presenting a "500 Internal Server Error" message
 
    The Python wiki features a page on `CGI scripts
    <http://wiki.python.org/moin/CgiScripts>`_ with some additional information
    about CGI in Python.
 
-   
+
 Simple script for testing CGI
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 
 To test whether your web server works with CGI, you can use this short and
 simple CGI program::
 
     #!/usr/bin/env python
     # -*- coding: UTF-8 -*-
 
     # enable debugging
-    import cgitb; cgitb.enable()
+    import cgitb
+    cgitb.enable()
 
     print "Content-Type: text/plain;charset=utf-8"
     print
 
     print "Hello World!"
 
 You need to write this code into a file with a ``.py`` or ``.cgi`` extension,
 this depends on your web server configuration.  Depending on your web server
 configuration, this file may also need to be in a ``cgi-bin`` folder, for
 security reasons.
 
 You might wonder what the ``cgitb`` line is about.  This line makes it possible
@@ -377,25 +378,25 @@
 can be deployed nearly everywhere.  This is one big advantage that Python has
 compared with other web techniques.
 
 .. seealso::
 
    A good overview of all WSGI-related code can be found in the `WSGI wiki
    <http://wsgi.org/wsgi>`_, which contains an extensive list of `WSGI servers
    <http://wsgi.org/wsgi/Servers>`_, which can be used by *every* application
    supporting WSGI.
 
    You might be interested in some WSGI-supporting modules already contained in
    the standard library, namely:
-    
+
    * :mod:`wsgiref` -- some tiny utilities and servers for WSGI
 
 
 Case study: MoinMoin
 --------------------
 
 What does WSGI give the web application developer?  Let's take a look on one
 long existing web application written in Python without using WSGI.
 
 One of the most widely used wiki software is `MoinMoin <http://moinmo.in/>`_.
 It was created in 2000, so it predates WSGI by about three years.  While it now
 includes support for WSGI, older versions needed separate code to run on CGI,
@@ -490,25 +491,25 @@
 template output is always guaranteed to be valid XML.  Some `frameworks`_ ship
 their own template engine or recommend one particular.  If one is not yet sure,
 using these is a good idea.
 
 .. note::
 
    While Python has quite a lot of different template engines it usually does
    not make sense to use a homebrewed template system.  The time needed to
    evaluate all templating systems is not really worth it, better invest the
    time in looking through the most popular ones.  Some frameworks have their
    own template engine or have a recommentation for one.  It's wise to use
    these.
-  
+
    Popular template engines include:
 
    * Mako
    * Genshi
    * Jinja
 
 .. seealso::
 
    Lots of different template engines divide the attention between themselves
    because it's easy to create them in Python.  The page `Templating
    <http://wiki.python.org/moin/Templating>`_ in the wiki lists a big,
    ever-growing number of these.
@@ -678,20 +679,20 @@
 Another framework that's already been mentioned is `Pylons`_.  Pylons is much
 like TurboGears with ab even stronger emphasis on flexibility, which is bought
 at the cost of being more difficult to use.  Nearly every component can be
 exchanged, which makes it neccessary to use the documentation of every single
 component, because there are so many Pylons combinations possible that can
 satisfy every requirement.  Pylons builds upon `Paste
 <http://pythonpaste.org/>`_, an extensive set of tools which are handy for WSGI.
 
 And that's still not everything.  The most up-to-date information can always be
 found in the Python wiki.
 
 .. seealso::
-    
+
    The Python wiki contains an extensive list of `web frameworks
    <http://wiki.python.org/moin/WebFrameworks>`_.
 
    Most frameworks also have their own mailing lists and IRC channels, look out
    for these on the projects' websites.  There is also a general "Python in the
    Web" IRC channel on freenode called `#python.web
    <http://wiki.python.org/moin/PoundPythonWeb>`_.
