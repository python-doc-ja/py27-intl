--- rest26/howto/cporting.rst	2008-12-19 16:58:09.000000000 +0900
+++ rest262/howto/cporting.rst	2009-04-05 05:01:49.000000000 +0900
@@ -87,25 +87,25 @@
        free(encoded);
        return result;
    }
 
 
 long/int Unification
 --------------------
 
 In Python 3.0, there is only one integer type.  It is called :func:`int` on the
 Python level, but actually corresponds to 2.x's :func:`long` type.  In the
 C-API, ``PyInt_*`` functions are replaced by their ``PyLong_*`` neighbors.  The
 best course of action here is using the ``PyInt_*`` functions aliased to
-``PyLong_*`` found in :file:`intobject.h`.  The the abstract ``PyNumber_*`` APIs
+``PyLong_*`` found in :file:`intobject.h`.  The abstract ``PyNumber_*`` APIs
 can also be used in some cases. ::
 
    #include "Python.h"
    #include "intobject.h"
 
    static PyObject *
    add_ints(PyObject *self, PyObject *args) {
        int one, two;
        PyObject *result;
 
        if (!PyArg_ParseTuple(args, "ii:add_ints", &one, &two))
            return NULL;
