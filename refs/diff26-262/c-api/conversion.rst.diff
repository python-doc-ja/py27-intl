--- rest26/c-api/conversion.rst	2008-12-19 16:58:09.000000000 +0900
+++ rest262/c-api/conversion.rst	2009-04-05 05:01:43.000000000 +0900
@@ -68,34 +68,34 @@
 .. cfunction:: char * PyOS_ascii_formatd(char *buffer, size_t buf_len, const char *format, double d)
 
    Convert a :ctype:`double` to a string using the ``'.'`` as the decimal
    separator. *format* is a :cfunc:`printf`\ -style format string specifying the
    number format. Allowed conversion characters are ``'e'``, ``'E'``, ``'f'``,
    ``'F'``, ``'g'`` and ``'G'``.
 
    The return value is a pointer to *buffer* with the converted string or NULL if
    the conversion failed.
 
    .. versionadded:: 2.4
 
- 
+
 .. cfunction:: double PyOS_ascii_atof(const char *nptr)
 
    Convert a string to a :ctype:`double` in a locale-independent way.
 
    .. versionadded:: 2.4
 
    See the Unix man page :manpage:`atof(2)` for details.
 
-   
+
 .. cfunction:: char * PyOS_stricmp(char *s1, char *s2)
 
    Case insensitive comparison of strings. The function works almost
    identically to :cfunc:`strcmp` except that it ignores the case.
 
    .. versionadded:: 2.6
 
 
 .. cfunction:: char * PyOS_strnicmp(char *s1, char *s2, Py_ssize_t  size)
 
    Case insensitive comparison of strings. The function works almost
    identically to :cfunc:`strncmp` except that it ignores the case.
