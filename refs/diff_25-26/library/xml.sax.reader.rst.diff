--- rest25/library/xml.sax.reader.rst	2008-10-21 04:57:11.524598769 +0900
+++ rest26/library/xml.sax.reader.rst	2008-10-21 05:03:05.009176634 +0900
@@ -61,42 +61,41 @@
 
    Applications will create objects of this class for use in the
    :meth:`XMLReader.parse` method and for returning from
    EntityResolver.resolveEntity.
 
    An :class:`InputSource` belongs to the application, the :class:`XMLReader` is
    not allowed to modify :class:`InputSource` objects passed to it from the
    application, although it may make copies and modify those.
 
 
 .. class:: AttributesImpl(attrs)
 
-   This is an implementation of the :class:`Attributes` interface (XXX reference:
-   attributes-objects.html) (see section :ref:`attributes-objects`).  This is a
-   dictionary-like object which represents the element attributes in a
-   :meth:`startElement` call. In addition to the most useful dictionary operations,
-   it supports a number of other methods as described by the interface. Objects of
-   this class should be instantiated by readers; *attrs* must be a dictionary-like
-   object containing a mapping from attribute names to attribute values.
+   This is an implementation of the :class:`Attributes` interface (see section
+   :ref:`attributes-objects`).  This is a dictionary-like object which
+   represents the element attributes in a :meth:`startElement` call. In addition
+   to the most useful dictionary operations, it supports a number of other
+   methods as described by the interface. Objects of this class should be
+   instantiated by readers; *attrs* must be a dictionary-like object containing
+   a mapping from attribute names to attribute values.
 
 
 .. class:: AttributesNSImpl(attrs, qnames)
 
    Namespace-aware variant of :class:`AttributesImpl`, which will be passed to
    :meth:`startElementNS`. It is derived from :class:`AttributesImpl`, but
-   understands attribute names as two-tuples of *namespaceURI* and *localname*. In
-   addition, it provides a number of methods expecting qualified names as they
-   appear in the original document.  This class implements the
-   :class:`AttributesNS` interface (XXX reference: attributes-ns-objects.html) (see
-   section :ref:`attributes-ns-objects`).
+   understands attribute names as two-tuples of *namespaceURI* and
+   *localname*. In addition, it provides a number of methods expecting qualified
+   names as they appear in the original document.  This class implements the
+   :class:`AttributesNS` interface (see section :ref:`attributes-ns-objects`).
 
 
 .. _xmlreader-objects:
 
 XMLReader Objects
 -----------------
 
 The :class:`XMLReader` interface supports the following methods:
 
 
 .. method:: XMLReader.parse(source)
 
@@ -280,26 +279,26 @@
 
    The encoding attribute of the :class:`InputSource` is ignored if the
    :class:`InputSource` also contains a character stream.
 
 
 .. method:: InputSource.getEncoding()
 
    Get the character encoding of this InputSource.
 
 
 .. method:: InputSource.setByteStream(bytefile)
 
-   Set the byte stream (a Python file-like object which does not perform byte-to-
-   character conversion) for this input source.
+   Set the byte stream (a Python file-like object which does not perform
+   byte-to-character conversion) for this input source.
 
    The SAX parser will ignore this if there is also a character stream specified,
    but it will use a byte stream in preference to opening a URI connection itself.
 
    If the application knows the character encoding of the byte stream, it should
    set it with the setEncoding method.
 
 
 .. method:: InputSource.getByteStream()
 
    Get the byte stream for this input source.
 
@@ -341,36 +340,36 @@
    Return the names of the attributes.
 
 
 .. method:: Attributes.getType(name)
 
    Returns the type of the attribute *name*, which is normally ``'CDATA'``.
 
 
 .. method:: Attributes.getValue(name)
 
    Return the value of attribute *name*.
 
-.. % getValueByQName, getNameByQName, getQNameByName, getQNames available
-.. % here already, but documented only for derived class.
+.. getValueByQName, getNameByQName, getQNameByName, getQNames available
+.. here already, but documented only for derived class.
 
 
 .. _attributes-ns-objects:
 
 The :class:`AttributesNS` Interface
 -----------------------------------
 
-This interface is a subtype of the :class:`Attributes` interface (XXX reference:
-attributes-objects.html) (see section :ref:`attributes-objects`).  All methods
-supported by that interface are also available on :class:`AttributesNS` objects.
+This interface is a subtype of the :class:`Attributes` interface (see section
+:ref:`attributes-objects`).  All methods supported by that interface are also
+available on :class:`AttributesNS` objects.
 
 The following methods are also available:
 
 
 .. method:: AttributesNS.getValueByQName(name)
 
    Return the value for a qualified name.
 
 
 .. method:: AttributesNS.getNameByQName(name)
 
    Return the ``(namespace, localname)`` pair for a qualified *name*.
