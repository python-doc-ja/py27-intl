--- r262/howto/unicode.rst	2009-01-04 06:55:17.853888000 +0900
+++ r266/howto/unicode.rst	2009-10-28 00:08:27.384772000 +0900
@@ -201,29 +201,30 @@
 References
 ----------
 
 The Unicode Consortium site at <http://www.unicode.org> has character charts, a
 glossary, and PDF versions of the Unicode specification.  Be prepared for some
 difficult reading.  <http://www.unicode.org/history/> is a chronology of the
 origin and development of Unicode.
 
 To help understand the standard, Jukka Korpela has written an introductory guide
 to reading the Unicode character tables, available at
 <http://www.cs.tut.fi/~jkorpela/unicode/guide.html>.
 
-Two other good introductory articles were written by Joel Spolsky
-<http://www.joelonsoftware.com/articles/Unicode.html> and Jason Orendorff
-<http://www.jorendorff.com/articles/unicode/>.  If this introduction didn't make
-things clear to you, you should try reading one of these alternate articles
-before continuing.
+Another good introductory article was written by Joel Spolsky
+<http://www.joelonsoftware.com/articles/Unicode.html>.
+If this introduction didn't make things clear to you, you should try reading this
+alternate article before continuing.
+
+.. Jason Orendorff XXX http://www.jorendorff.com/articles/unicode/ is broken
 
 Wikipedia entries are often helpful; see the entries for "character encoding"
 <http://en.wikipedia.org/wiki/Character_encoding> and UTF-8
 <http://en.wikipedia.org/wiki/UTF-8>, for example.
 
 
 Python's Unicode Support
 ========================
 
 Now that you've learned the rudiments of Unicode, we can look at Python's
 Unicode features.
 
@@ -462,25 +463,25 @@
     1 0bf2 No TAMIL NUMBER ONE THOUSAND
     2 0f84 Mn TIBETAN MARK HALANTA
     3 1770 Lo TAGBANWA LETTER SA
     4 33af So SQUARE RAD OVER S SQUARED
     1000.0
 
 The category codes are abbreviations describing the nature of the character.
 These are grouped into categories such as "Letter", "Number", "Punctuation", or
 "Symbol", which in turn are broken up into subcategories.  To take the codes
 from the above output, ``'Ll'`` means 'Letter, lowercase', ``'No'`` means
 "Number, other", ``'Mn'`` is "Mark, nonspacing", and ``'So'`` is "Symbol,
 other".  See
-<http://www.unicode.org/Public/UNIDATA/UCD.html#General_Category_Values> for a
+<http://unicode.org/Public/5.1.0/ucd/UCD.html#General_Category_Values> for a
 list of category codes.
 
 References
 ----------
 
 The Unicode and 8-bit string types are described in the Python library reference
 at :ref:`typesseq`.
 
 The documentation for the :mod:`unicodedata` module.
 
 The documentation for the :mod:`codecs` module.
 
