--- r262/install/index.rst	2009-01-04 06:55:17.853888000 +0900
+++ r266/install/index.rst	2010-08-02 06:48:47.574872000 +0900
@@ -305,26 +305,26 @@
 you.
 
 
 .. _inst-alt-install-prefix:
 
 Alternate installation: the home scheme
 ---------------------------------------
 
 The idea behind the "home scheme" is that you build and maintain a personal
 stash of Python modules.  This scheme's name is derived from the idea of a
 "home" directory on Unix, since it's not unusual for a Unix user to make their
 home directory have a layout similar to :file:`/usr/` or :file:`/usr/local/`.
-This scheme can be used by anyone, regardless of the operating system their
-installing for.
+This scheme can be used by anyone, regardless of the operating system they
+are installing for.
 
 Installing a new module distribution is as simple as ::
 
    python setup.py install --home=<dir>
 
 where you can supply any directory you like for the :option:`--home` option.  On
 Unix, lazy typists can just type a tilde (``~``); the :command:`install` command
 will expand this to your home directory::
 
    python setup.py install --home=~
 
 The :option:`--home` option defines the installation base directory.  Files are
@@ -697,42 +697,44 @@
 Notes:
 
 (1)
    Strictly speaking, the system-wide configuration file lives in the directory
    where the Distutils are installed; under Python 1.6 and later on Unix, this is
    as shown. For Python 1.5.2, the Distutils will normally be installed to
    :file:`{prefix}/lib/python1.5/site-packages/distutils`, so the system
    configuration file should be put there under Python 1.5.2.
 
 (2)
    On Unix, if the :envvar:`HOME` environment variable is not defined, the user's
    home directory will be determined with the :func:`getpwuid` function from the
-   standard :mod:`pwd` module.
+   standard :mod:`pwd` module. This is done by the :func:`os.path.expanduser`
+   function used by Distutils.
 
 (3)
    I.e., in the current directory (usually the location of the setup script).
 
 (4)
    (See also note (1).)  Under Python 1.6 and later, Python's default "installation
    prefix" is :file:`C:\\Python`, so the system configuration file is normally
    :file:`C:\\Python\\Lib\\distutils\\distutils.cfg`. Under Python 1.5.2, the
    default prefix was :file:`C:\\Program Files\\Python`, and the Distutils were not
    part of the standard library---so the system configuration file would be
    :file:`C:\\Program Files\\Python\\distutils\\distutils.cfg` in a standard Python
    1.5.2 installation under Windows.
 
 (5)
-   On Windows, if the :envvar:`HOME` environment variable is not defined, no
-   personal configuration file will be found or used.  (In other words, the
-   Distutils make no attempt to guess your home directory on Windows.)
+   On Windows, if the :envvar:`HOME` environment variable is not defined,
+   :envvar:`USERPROFILE` then :envvar:`HOMEDRIVE` and :envvar:`HOMEPATH` will
+   be tried. This is done by the :func:`os.path.expanduser` function used
+   by Distutils.
 
 
 .. _inst-config-syntax:
 
 Syntax of config files
 ----------------------
 
 The Distutils configuration files all have the same syntax.  The config files
 are grouped into sections.  There is one section for each Distutils command,
 plus a ``global`` section for global options that affect every command.  Each
 section consists of one option per line, specified as ``option=value``.
 
@@ -929,25 +931,26 @@
 
 These instructions only apply if you're using a version of Python prior  to
 2.4.1 with a MinGW prior to 3.0.0 (with binutils-2.13.90-20030111-1).
 
 This section describes the necessary steps to use Distutils with the GNU C/C++
 compilers in their Cygwin and MinGW distributions. [#]_ For a Python interpreter
 that was built with Cygwin, everything should work without any of these
 following steps.
 
 These compilers require some special libraries. This task is more complex than
 for Borland's C++, because there is no program to convert the library.  First
 you have to create a list of symbols which the Python DLL exports. (You can find
-a good program for this task at http://www.emmestech.com/software/cygwin/pexports-0.43/download_pexports.html)
+a good program for this task at
+http://www.emmestech.com/software/pexports-0.43/download_pexports.html).
 
 .. I don't understand what the next line means. --amk
 .. (inclusive the references on data structures.)
 
 ::
 
    pexports python25.dll >python25.def
 
 The location of an installed :file:`python25.dll` will depend on the
 installation options and the version and language of Windows.  In a "just for
 me" installation, it will appear in the root of the installation directory.  In
 a shared installation, it will be located in the system directory.
